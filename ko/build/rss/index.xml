<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 04 Feb 2021 14:06:15 +0900</pubDate>
    <lastBuildDate>Thu, 04 Feb 2021 14:06:15 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-02-02のJS: WebRTC 1.0、Firefox 85、Chrome 89 Beta</title>
        <description>&lt;p&gt;JSer.info #525 - WebRTC 1.0がW3C RecommendationとIETF標準となりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ietf.org/blog/webrtc-milestone/&quot;&gt;IETF | WebRTC: Marking a milestone in real-time communications&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rfc-editor.org/search/rfc_search_detail.php?page=All&amp;pubstatus%5B%5D=Any&amp;from_month=January&amp;from_year=2021&amp;pub_date_type=range&amp;to_month=January&amp;to_year=2021&amp;sortkey=Number&amp;sorting=ASC&quot;&gt;RFC Search Detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/wg/rtcweb/documents/&quot;&gt;Real-Time Communication in WEB-browsers (rtcweb) - Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W3Cの仕様ではJavaScriptのAPIが定義されており、IETFの仕様ではプロトコルが定義されています。&lt;br&gt;
すでに&lt;a href=&quot;https://wpt.fyi/results/webrtc?label=master&amp;label=experimental&amp;aligned&quot;&gt;ブラウザ上にJavaScript APIが実装&lt;/a&gt;されていたり、&lt;a href=&quot;https://news.ycombinator.com/item?id=25933366&quot;&gt;多くのWebRTCの実装&lt;/a&gt;が存在するため、利用できる/利用している状態です。&lt;br&gt;
今回のアナウンスは、WebRTCの仕様が1.0に到達し安定したことを意味しています。&lt;/p&gt;

&lt;p&gt;次の仕様改善については、&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;というGoogleのブログにも書かれていますが、&lt;a href=&quot;https://www.w3.org/TR/webrtc-nv-use-cases/&quot;&gt;WebRTC Next Version Use Cases&lt;/a&gt;などでユースケースを集めながら整理していくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 85がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flashのサポートを終了しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Plugins/Roadmap&quot;&gt;Plugin Roadmap for Firefox - Plugins | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSSでPrefixなしの&lt;code&gt;:focus-visible&lt;/code&gt;をサポート、&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;をデフォルトでサポートしています。&lt;br&gt;
ES Proposal Stage 3のTop-Level awaitのサポート、&lt;code&gt;at()&lt;/code&gt;メソッドのサポートなどが追加されています。&lt;br&gt;
また、キャッシュなどをつかったトラッキングを防止するためにNetwork partitioningの導入されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 89ベータがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebHID API、Web NFC、Web Serial APIのデフォルト有効化、デスクトップでのWeb Sharingが有効化されています。&lt;br&gt;
また、Cross-origin opener policy reporting API、Manifastに&lt;code&gt;display_override&lt;/code&gt;が追加されています。&lt;br&gt;
その他には、&lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt;の追加、Streams APIがByte Streamsをサポートされています。&lt;/p&gt;

&lt;p&gt;Firefoxと同様にTop-Level awaitのサポートが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;january-brings-us-firefox-85-mozilla-hacks-the-web-developer-blog&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot; title=&quot;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 85リリース。&lt;br&gt;
Flashのサポート終了。&lt;br&gt;
CSSでPrefixなしの&lt;code&gt;:focus-visible&lt;/code&gt;をサポート、&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;のサポート。&lt;br&gt;
ES Proposal Stage 3のTop-Level awaitのサポート、&lt;code&gt;at()&lt;/code&gt;メソッドのサポートなど。&lt;br&gt;
また、Network partitioningの導入など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot; title=&quot;Firefox 85.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot; title=&quot;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning#what_is_the_impact_of_this_behavioral_change&quot; title=&quot;Gaining security and privacy by partitioning the cache  |  Web&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/85&quot; title=&quot;Firefox 85 for developers - Mozilla | MDN&quot;&gt;Firefox 85 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-119-webkit&quot;&gt;Release Notes for Safari Technology Preview 119 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&quot; title=&quot;Release Notes for Safari Technology Preview 119 | WebKit&quot;&gt;webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 119リリース。&lt;br&gt;
SpeechRecognition APIの有効化、CSS &lt;code&gt;aspect-ratio&lt;/code&gt;プロパティのサポート改善、&lt;code&gt;prefers-contrast: more&lt;/code&gt;のサポートなど。&lt;br&gt;
WebAssemblyで&lt;code&gt;memory.copy&lt;/code&gt;、&lt;code&gt;memory.init&lt;/code&gt;、&lt;code&gt;memory.fill&lt;/code&gt;をフラグ付きでサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-operations/Overview.md&quot; title=&quot;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&quot;&gt;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-contrast&quot; title=&quot;Media Queries Level 5&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-5-0-npm-cli&quot;&gt;Release v7.5.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.5.0リリース。&lt;br&gt;
npmパッケージのDiffを取得する&lt;code&gt;npm diff&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/ruyadorno/npm-diff-23dh&quot; title=&quot;npm diff - DEV Community 👩‍💻👨‍💻&quot;&gt;npm diff - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-89-beta-advanced-hardware-interactions-web-sharing-on-desktop-and-more&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot; title=&quot;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&quot;&gt;blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 89ベータリリース。&lt;br&gt;
WebHID API、Web NFC、Web Serial APIのデフォルト有効化、デスクトップでのWeb Sharingの有効化。&lt;br&gt;
Cross-origin opener policy reporting API、Manifastに&lt;code&gt;display_override&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt;の追加、Streams APIがByte Streamsをサポート。&lt;br&gt;
その他にはTop-Level awaitのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtc-1-0-is-a-w3c-recommendation-w3c-news&quot;&gt;WebRTC 1.0 is a W3C Recommendation | W3C News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/8897&quot; title=&quot;WebRTC 1.0 is a W3C Recommendation | W3C News&quot;&gt;www.w3.org/blog/news/archives/8897&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC 1.0がW3C Recommendationとなった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot; title=&quot;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot; title=&quot;WebRTC is now a W3C and IETF standard&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;toast-ui-chart-4-0-is-here-toast-ui-make-your-web-delicious&quot;&gt;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ui.toast.com/weekly-pick/en_20210126&quot; title=&quot;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&quot;&gt;ui.toast.com/weekly-pick/en_20210126&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;グラフライブラリのTOAST UI Chart v4.0リリース。&lt;br&gt;
依存をなくしファイルサイズの削減、レスポンシブサポート、ライブアップデートに対応したグラフの追加、テーマオプションの改善など。&lt;br&gt;
v3からのマイグレーションガイドも公開している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nhn/tui.chart/blob/main/docs/v4.0-migration-guide-en.md&quot; title=&quot;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&quot;&gt;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ckeditor-5-v25-0-0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes&quot;&gt;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&quot; title=&quot;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&quot;&gt;ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CKEditor 5 v25.0.0リリース。&lt;br&gt;
ReDoSの問題の修正、コンテンツブロックの動作改善、大量のテキストのフォーマットのパフォーマンス改善、画像管理の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-3-4-vuejs-vue-devtools&quot;&gt;Release v5.3.4 · vuejs/vue-devtools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/releases/tag/v5.3.4&quot; title=&quot;Release v5.3.4 · vuejs/vue-devtools&quot;&gt;github.com/vuejs/vue-devtools/releases/tag/v5.3.4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue DevTools 5.3.4リリース。&lt;br&gt;
Universal XSS脆弱性の修正&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/issues/1353&quot; title=&quot;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&quot;&gt;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-8-release-plan-issue-10746-babel-babel&quot;&gt;Babel 8 Release Plan · Issue #10746 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/issues/10746&quot; title=&quot;Babel 8 Release Plan · Issue #10746 · babel/babel&quot;&gt;github.com/babel/babel/issues/10746&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 8のRoadmap Issue&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;when-to-use-https-for-local-development&quot;&gt;When to use HTTPS for local development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/when-to-use-local-https/&quot; title=&quot;When to use HTTPS for local development&quot;&gt;web.dev/when-to-use-local-https/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTPS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ローカル開発でもHTTPSが必要なものと&lt;code&gt;localshot&lt;/code&gt;について。&lt;br&gt;
また、ローカルでの開発に使うべきTLDについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/how-to-use-local-https/&quot; title=&quot;How to use HTTPS for local development&quot;&gt;How to use HTTPS for local development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;visitor-pattern-in-typescript-writing-kirill-vasiltsov&quot;&gt;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&quot; title=&quot;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&quot;&gt;www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのinterfaceを使ったVisitor Patternの実装方法についての記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison-checkly-blog&quot;&gt;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&quot; title=&quot;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&quot;&gt;blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;テストフレームワークの実行速度について比較した記事。&lt;br&gt;
Puppeteer、Playwright、WebDriverIO、Selenium、Cypressをいくつかのシナリオで比較している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.checklyhq.com/puppeteer-vs-selenium-vs-playwright-speed-comparison/&quot; title=&quot;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&quot;&gt;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;undefined-vs-null-revisited&quot;&gt;`undefined` vs. `null` revisited&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2ality.com/2021/01/undefined-null-revisited.html&quot; title=&quot;\`undefined\` vs. \`null\` revisited&quot;&gt;2ality.com/2021/01/undefined-null-revisited.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;null&lt;/code&gt;について。&lt;br&gt;
&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;null&lt;/code&gt;の歴史、&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;nulll&lt;/code&gt;が言語的に発生するケース。言語的に特別扱いされるケース、どれを値がない値として使うかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu-express-lazy-router-lazy-loading-for-express-router&quot;&gt;azu/express-lazy-router: Lazy loading for express router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/express-lazy-router&quot; title=&quot;azu/express-lazy-router: Lazy loading for express router&quot;&gt;github.com/azu/express-lazy-router&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressのRouterを遅延ロードするライブラリ。&lt;br&gt;
ts-node-devとか@babel/registerでruntime compileしているケースで、起動時に全コンパイルじゃなくて分散コンパイルできるようにする目的&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webreflection-linkedom-a-triple-linked-lists-based-dom-implementation&quot;&gt;WebReflection/linkedom: A triple-linked lists based DOM implementation.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WebReflection/linkedom&quot; title=&quot;WebReflection/linkedom: A triple-linked lists based DOM implementation.&quot;&gt;github.com/WebReflection/linkedom&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのHTML/DOMの実装ライブラリ。&lt;br&gt;
基本的なユースケースにおけるHTML文字列のパース、DOM APIを一定のパフォーマンスで実現できるものを目指している。&lt;br&gt;
DOM標準互換を目指すのではなく、basichtmlの置き換えを目的に治している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/basicHTML#readme&quot; title=&quot;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&quot;&gt;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shinyoshiaki-werift-webrtc-webrtc-implementation-for-typescript-node-js&quot;&gt;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shinyoshiaki/werift-webrtc&quot; title=&quot;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&quot;&gt;github.com/shinyoshiaki/werift-webrtc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでのWebRTCの実装。&lt;br&gt;
STUN、TURN、ICE、DataChannel、MediaChannelなどの実装&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;willmendesneto-perf-marks-the-isomorphic-simplest-and-lightweight-solution-for-user-timing-api-in-javascript-only-208b-tree-shaking-and-entry-points-built-in-simple-as-that&quot;&gt;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/willmendesneto/perf-marks&quot; title=&quot;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&quot;&gt;github.com/willmendesneto/perf-marks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;User Timing APIのラッパーライブラリ。&lt;br&gt;
ブラウザとNode.js(&lt;code&gt;perf_hooks&lt;/code&gt;)で利用できる。&lt;br&gt;
User Timing APIのラップ、サポートしているかの判定処理、関数のプロファイル機能などを提供する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alesgenova-post-me-use-web-workers-and-other-windows-through-a-simple-promise-api&quot;&gt;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alesgenova/post-me&quot; title=&quot;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&quot;&gt;github.com/alesgenova/post-me&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Worker、Window(iframe)間のメッセージングライブラリ。&lt;br&gt;
PromiseベースのAPIでWindowとWorker間でメッセージのやり取りができる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Feb 2021 11:55:41 +0900</pubDate>
        <link>https://jser.info/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</link>
        <guid isPermaLink="true">https://jser.info/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</guid>
        
        <category>TypeScript</category>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>WebRTC</category>
        
        <category>Firefox</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-26のJS: webpack 5.17.0(lazyCompilation)、Deno 1.7、Open Web Docs</title>
        <description>&lt;p&gt;JSer.info #524 - webpack 5.17.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 5.17.0では &lt;code&gt;experiments.lazyCompilation&lt;/code&gt; オプションが試験的に追加されています。&lt;br&gt;
&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;は、webpack dev serverなどのローカルサーバと組み合わせて動作します。&lt;br&gt;
&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;は、Dynamic Importしているモジュール(chunk)を起動時にはビルドせずに、そのモジュールがロードされた際にビルドする遅延コンパイルの仕組みです。&lt;/p&gt;

&lt;p&gt;仕組み的には、初回のビルド時にDynamic Importしているモジュールは、lazyCompilationをするためのProxy的なモジュールとしてビルドされます。このモジュールはlazyCompilationの&lt;code&gt;client&lt;/code&gt;となり読み込まれた際に、lazyCompilationの&lt;code&gt;backend&lt;/code&gt;側にServer Sent Eventを使って読み込まれたことを通知します。&lt;br&gt;
lazyCompilationの&lt;code&gt;backend&lt;/code&gt;は&lt;code&gt;client&lt;/code&gt;からの通知を受け取ったら、実際のモジュールをビルドして返す仕組みになっています。&lt;br&gt;
この&lt;code&gt;client&lt;/code&gt;と&lt;code&gt;backend&lt;/code&gt;もそれぞれ&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;オプションで独自のものが定義できるようになっていて、デフォルトではwebpack dev serverで動くコードになっています。&lt;/p&gt;

&lt;p&gt;初回の起動時のコンパイル範囲を抑えることで、開発サーバの立ち上げ速度を改善することが主な目的となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Deno 1.7がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot;&gt;Deno 1.7 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot;&gt;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.6&quot;&gt;Deno 1.6&lt;/a&gt;でサポートされた&lt;code&gt;deno compile&lt;/code&gt;のサイズ改善とクロスコンパイルの対応が行われています。&lt;br&gt;
Data URLのimportをサポート、&lt;code&gt;deno fmt&lt;/code&gt;のMarkdownサポートが追加されています。&lt;br&gt;
また、Steram APIをWHATWGに準拠するように修正、Web Workerに&lt;code&gt;permissions&lt;/code&gt;オプションでDeno独自のパーミッションを指定できるようになっています。&lt;br&gt;
その他には、&lt;code&gt;--location&lt;/code&gt;フラグを使って相対URLのFetchに対応、FetchのリクエストbodyにStreamを指定可能になるといった変更も含まれています。&lt;/p&gt;

&lt;p&gt;破壊的な変更としてunstableなDeno APIsの変更やUnstable APIとして&lt;code&gt;Deno.resolveDns&lt;/code&gt;のサポートが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openwebdocs/project&quot;&gt;Open Web Docs&lt;/a&gt;というMDNなどのウェブプラットフォームのドキュメントを改善していくためのプロジェクトが立ち上げられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot;&gt;Open Web Docs - Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2020年8月のMozillaにおけるレイオフの影響で&lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;MDN&lt;/a&gt;のWriterなどのチームが縮小されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/&quot;&gt;Changing World, Changing Mozilla - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/08/an-update-on-mdn-web-docs/&quot;&gt;An Update on MDN Web Docs - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Open Web Docsでは、MDNなどのウェブプラットフォームに関するドキュメントへのコントリビューションをしていく組織です。Open Web DocsのメンバーにはMozilla、Google、Microsoft、W3Cなどがいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot;&gt;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当面の目標は、MDNの&lt;a href=&quot;https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&quot;&gt;新しいアーキテクチャ&lt;/a&gt;への移行のサポート、&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;ブラウザの互換データ&lt;/a&gt;の改善、JavaScriptのドキュメントの改善などを行っていくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ipfs-support-in-brave&quot;&gt;IPFS Support in Brave&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://brave.com/ipfs-support/&quot; title=&quot;IPFS Support in Brave&quot;&gt;brave.com/ipfs-support/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IPFS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BraveがP2PプロトコルであるIPFS(InterPlanetary File System)をサポート。&lt;br&gt;
Brave 1.19.x以降では、ゲートウェイとローカルノードを使ったIPFSURIの解決ができるようになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://brave.com/brave-integrates-ipfs/&quot; title=&quot;Brave Integrates IPFS&quot;&gt;Brave Integrates IPFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-17-0-webpack-webpack&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot; title=&quot;Release v5.17.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.17.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.17.0リリース。&lt;br&gt;
実験的な機能として、Dynamic Importしているモジュールをアクセスした時にビルドできる&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;オプションを追加。&lt;br&gt;
起動時にすべてをビルドしないことで、利用してないエントリポイントがビルドパフォーマンスに影響を与えないようにする目的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/liximomo/lazy-compile-webpack-plugin&quot; title=&quot;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&quot;&gt;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-node-js-runtime-cloud-functions-documentation-google-cloud&quot;&gt;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&quot; title=&quot;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&quot;&gt;cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GCP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloud FunctionがNode.js 14をpublic previewとしてサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-7-release-notes&quot;&gt;Deno 1.7 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot; title=&quot;Deno 1.7 Release Notes&quot;&gt;deno.land/posts/v1.7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.7リリース。&lt;br&gt;
&lt;code&gt;deno compile&lt;/code&gt;のサイズ改善とクロスコンパイルの対応、Data URLのimportをサポート、&lt;code&gt;deno fmt&lt;/code&gt;のMarkdownサポート。&lt;br&gt;
Steram APIをWHATWGに準拠するように修正、Web Workerに&lt;code&gt;permissions&lt;/code&gt;でDeno独自のパーミッションを指定可能に。&lt;br&gt;
&lt;code&gt;--location&lt;/code&gt;フラグを使って相対URLのFetchに対応、FetchのリクエストbodyにStreamを指定可能になるなど。&lt;br&gt;
破壊的な変更としてDeno APIsの変更やUnstable APIとして&lt;code&gt;Deno.resolveDns&lt;/code&gt;のサポートが含まれる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot; title=&quot;Release v1.7.0 · denoland/deno&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot; title=&quot;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&quot;&gt;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-web-docs-open-collective&quot;&gt;Open Web Docs - Open Collective&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot; title=&quot;Open Web Docs - Open Collective&quot;&gt;opencollective.com/open-web-docs/updates/introducing-open-web-docs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNのようなウェブプラットフォームのドキュメントに対して長期的に取り組んでいくためのプロジェクト。MozillaなどのブラウザベンダーやW3Cなどがメンバーにいる。&lt;br&gt;
当面はMDNへのコントリビューションをしていく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2021/01/25/welcome-open-web-docs/&quot; title=&quot;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&quot;&gt;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/open-web-docs/&quot; title=&quot;Introducing Open Web Docs&quot;&gt;Introducing Open Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/welcoming-open-web-docs-to-the-mdn-family/&quot; title=&quot;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&quot;&gt;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.igalia.com/2021/01/25/Open-Web-Docs.html&quot; title=&quot;Open Web Docs | Igalia&quot;&gt;Open Web Docs | Igalia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/2021/01/welcome-to-open-web-docs/&quot; title=&quot;Welcome to Open Web Docs! | W3C Blog&quot;&gt;Welcome to Open Web Docs! | W3C Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot; title=&quot;project/membership-expectations.md at main · openwebdocs/project&quot;&gt;project/membership-expectations.md at main · openwebdocs/project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-solve-the-infinite-loop-of-react-useeffect&quot;&gt;How to Solve the Infinite Loop of React.useEffect()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/react-useeffect-infinite-loop/&quot; title=&quot;How to Solve the Infinite Loop of React.useEffect()&quot;&gt;dmitripavlutin.com/react-useeffect-infinite-loop/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactの&lt;code&gt;useEffect&lt;/code&gt;の中でStateを更新した場合になぜ無限ループが起きるのか、またその修正方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-puppeteer-to-typescript-web-google-developers&quot;&gt;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/01/puppeteer-typescript&quot; title=&quot;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/01/puppeteer-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PuppeteerのコードベースをJavaScriptからTypeScriptの移行するどのように取り組んでいるかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BHogHiiyuQk&quot; title=&quot;Upgrading DevTools&amp;amp;#x27; architecture to the modern web - YouTube&quot;&gt;Upgrading DevTools&amp;#39; architecture to the modern web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-secret-parameter-lfr-and-potential-rce-in-nodejs-apps&quot;&gt;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&quot; title=&quot;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&quot;&gt;blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Expressで&lt;code&gt;hbs&lt;/code&gt;(handlebars)を使っている際に&lt;code&gt;res.render&lt;/code&gt;の第2引数にユーザー入力をそのまま渡してしまうと、&lt;code&gt;layout&lt;/code&gt;プロパティによって任意のファイルを読める問題について。&lt;br&gt;
また、Handlerbars 4.0.14未満にあった脆弱性と組み合わせることでRCEにつながるという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pillarjs/hbs&quot; title=&quot;pillarjs/hbs: Express view engine wrapper for Handlebars&quot;&gt;pillarjs/hbs: Express view engine wrapper for Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://expressjs.com/ja/api.html#res.render&quot; title=&quot;Express 4.x - API リファレンス&quot;&gt;Express 4.x - API リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speaker-deck&quot;&gt;ブラウザの作り方 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/keiya01/burauzafalsezuo-rifang&quot; title=&quot;ブラウザの作り方 - Speaker Deck&quot;&gt;speakerdeck.com/keiya01/burauzafalsezuo-rifang&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s build a browser engine!を参考にブラウザのレンダリングエンジンを作りながら、どのようにHTMLやCSSのパースからレンダリングしているのかという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/keiya01/kamaitachi&quot; title=&quot;keiya01/kamaitachi: \&amp;amp;#x60;kamaitachi\&amp;amp;#x60; is a simple browser.&quot;&gt;keiya01/kamaitachi: `kamaitachi` is a simple browser.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html&quot; title=&quot;Let&amp;amp;#x27;s build a browser engine! Part 1: Getting started&quot;&gt;Let&amp;#39;s build a browser engine! Part 1: Getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsitor-javascript-html-css-online-editor&quot;&gt;JSitor - JavaScript, HTML, CSS, online editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsitor.com/&quot; title=&quot;JSitor - JavaScript, HTML, CSS, online editor&quot;&gt;jsitor.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jsfiddle的なHTML/CSS/JSを書いて公開できるPlaygroundサービス。&lt;br&gt;
Monaco Editorを使ったエディタ、整形機能を持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;forgojs-forgo-an-ultra-light-ui-runtime&quot;&gt;forgojs/forgo: An ultra-light UI runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/forgojs/forgo&quot; title=&quot;forgojs/forgo: An ultra-light UI runtime&quot;&gt;github.com/forgojs/forgo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXで書けるUIライブラリ。&lt;br&gt;
Reactとは違いコンポーネント内でもDOM APIを扱う形になっていて、再レンダリングも手動で行う。&lt;br&gt;
ファイルサイズの小ささやフレームワークの抽象を少なくして、DOM APIを知っていれば扱えるようにするのが目的。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodepack&quot;&gt;Nodepack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodepackjs.com/&quot; title=&quot;Nodepack&quot;&gt;nodepackjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsウェブフレームワーク。&lt;br&gt;
プロジェクトを管理するためのCLIとそれを拡張するプラグインシステムをもつ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jan 2021 11:14:34 +0900</pubDate>
        <link>https://jser.info/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</guid>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>React</category>
        
        <category>IPFS</category>
        
        <category>p2p</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-18のJS: Snowpack 3.0、Front-End Performance Checklist、State of JS 2020</title>
        <description>&lt;p&gt;JSer.info #523 - &lt;a href=&quot;https://www.snowpack.dev/posts/2021-01-13-snowpack-3-0&quot;&gt;Snowpack v3.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;Snowpack 3.0ではPre-bundled &lt;a href=&quot;https://www.snowpack.dev/guides/streaming-imports&quot;&gt;Streaming Imports&lt;/a&gt;という機能がopt-inで利用できます。&lt;br&gt;
オプションで有効にすると、ローカルでbundleしたファイルではなく&lt;a href=&quot;https://www.skypack.dev/&quot;&gt;Skypack&lt;/a&gt;からESM(ECMAScript Modules)をロードできます。&lt;br&gt;
一度ロードしたESMはキャッシュされ、次回からはオフラインでも利用できます。&lt;br&gt;
また、この仕組みでロードするパッケージのバージョンは &lt;code&gt;snowpack.deps.json&lt;/code&gt; というファイルで管理できます。&lt;/p&gt;

&lt;p&gt;その他には、esbuildを使ったbundleの最適化のサポート、snowpackをJavaScriptから扱うAPIの更新などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/guides/optimize-and-bundle&quot;&gt;Optimize &amp;amp; Bundle for Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/reference/javascript-interface&quot;&gt;JavaScript API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&quot;&gt;Front-End Performance Checklist 2021 — Smashing Magazine&lt;/a&gt;では、フロントエンドのパフォーマンスに関して幅広い範囲でまとめられています。&lt;/p&gt;

&lt;p&gt;チェックリストという方式でパフォーマンスに関してまとめられていて、要約バージョンとしてPDFなども用意されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/34noajrbm324iai/performance-checklist-1.4.pdf?dl=0&quot;&gt;performance-checklist-1.4.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;記事では、それぞれのチェック項目について詳細な解説が書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptを扱う開発者アンケートであるState of JSの2020の結果が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2020.stateofjs.com/en-US/&quot;&gt;State of JS 2020&lt;/a&gt; (&lt;a href=&quot;https://2020.stateofjs.com/ja-JP/&quot;&gt;日本語&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptの言語機能、ライブラリ、ツール、エディタ、リソースなど各項目ごとに認知、満足度、興味、利用しているかなどをアンケートを行いその結果をまとめられています。&lt;br&gt;
結果の元となった回答者の属性については&lt;a href=&quot;https://2020.stateofjs.com/en-US/demographics/&quot;&gt;Demographics&lt;/a&gt;で公開されています。&lt;br&gt;
また、回答結果のJSONデータは &lt;a href=&quot;https://www.kaggle.com/sachag/state-of-js&quot;&gt;State of JS | Kaggle&lt;/a&gt; に公開されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;part-2a003bb4b350ea2b&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;2021年1月16日でJSer.infoが10周年を迎えたので、10周年を記念した記事を書きました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2021/01/16/jser-10th/&quot;&gt;JSer.info 10周年: JavaScript情報の集め方、書き方、まとめ方 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今年もよろしくお願いします。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snowpack-v3-0&quot;&gt;Snowpack v3.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.snowpack.dev/posts/2021-01-13-snowpack-3-0&quot; title=&quot;Snowpack v3.0&quot;&gt;www.snowpack.dev/posts/2021-01-13-snowpack-3-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Snowpack 3.0リリース。&lt;br&gt;
Streaming Importsのサポート、esbuildを使ったbundleの最適化のサポート、JavaScript APIの更新など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-karma-runner-karma&quot;&gt;Release v6.0.0 · karma-runner/karma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karma-runner/karma/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · karma-runner/karma&quot;&gt;github.com/karma-runner/karma/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Karma 6.0.0リリース。&lt;br&gt;
&lt;code&gt;customFileHandlers&lt;/code&gt;と&lt;code&gt;customScriptTypes&lt;/code&gt;の削除、不正なオプションを渡した時にエラーを出すようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-6-0-current-node-js&quot;&gt;Node v15.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.6.0/&quot; title=&quot;Node v15.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.6.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.6.0リリース。&lt;br&gt;
&lt;code&gt;child_process&lt;/code&gt;に&lt;code&gt;overlapped&lt;/code&gt;オプション、&lt;code&gt;.fork&lt;/code&gt;がAbortSinalに対応。&lt;br&gt;
&lt;code&gt;crypto&lt;/code&gt;モジュールに&lt;code&gt;randomUUID&lt;/code&gt;メソッドの追加、X509Certificate APIのサポート。&lt;br&gt;
&lt;code&gt;server.listen&lt;/code&gt;がAbortSignalをサポート、&lt;code&gt;http.Agent&lt;/code&gt;の&lt;code&gt;scheduling&lt;/code&gt;オプションにLIFOアルゴリズムを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-beta-typescript&quot;&gt;Announcing TypeScript 4.2 Beta | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&quot; title=&quot;Announcing TypeScript 4.2 Beta | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2 Betaリリース。&lt;br&gt;
Tuple TypesでRest Elementをサポート、Type Aliasの型追跡の改善、template literal typesの改善。&lt;br&gt;
&lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt;オプションの追加、&lt;code&gt;abstract new&lt;/code&gt;のサポートなど。&lt;br&gt;
また、&lt;code&gt;--explainFiles&lt;/code&gt;でなぜファイルが含まれるかを表示できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;adobe-flash-player-end-of-life&quot;&gt;Adobe Flash Player End of Life&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.adobe.com/products/flashplayer/end-of-life.html&quot; title=&quot;Adobe Flash Player End of Life&quot;&gt;www.adobe.com/products/flashplayer/end-of-life.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flash&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Adobe Flash Playerが2021年1月12日でサポートを終了した。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-scala-js-1-4-0-scala-js&quot;&gt;Announcing Scala.js 1.4.0 - Scala.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.scala-js.org/news/2021/01/12/announcing-scalajs-1.4.0/&quot; title=&quot;Announcing Scala.js 1.4.0 - Scala.js&quot;&gt;www.scala-js.org/news/2021/01/12/announcing-scalajs-1.4.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;scala&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Scala.js 1.4.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reflections-for-2020-2021-the-vue-point&quot;&gt;Reflections for 2020-2021 | The Vue Point&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.vuejs.org/posts/hello-2021.html&quot; title=&quot;Reflections for 2020-2021 | The Vue Point&quot;&gt;blog.vuejs.org/posts/hello-2021.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueの2020年の取り組みと2021の取り組み予定について。&lt;br&gt;
Vue 2から3へのマイグレーションツール、Vue CLIのwebpack 5対応、Vue 3のIE 11対応、Vue 2.7のリリースなどを予定している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/projects/6&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-performance-checklist-2021-smashing-magazine&quot;&gt;Front-End Performance Checklist 2021 — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&quot; title=&quot;Front-End Performance Checklist 2021 — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドパフォーマンスチェックリスト。&lt;br&gt;
サマリ版のPDFと詳細な解説をした記事で構成されている。&lt;br&gt;
全部で77コの項目があり、パフォーマンスの文化、メトリクスの設定や収集、さまざまなパフォーマンスTipsについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-in-2020&quot;&gt;Deno in 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/deno-in-2020&quot; title=&quot;Deno in 2020&quot;&gt;deno.land/posts/deno-in-2020&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Denoの2020年の変更点のサマリと2021年のロードマップについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-js-2020&quot;&gt;State of JS 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2020.stateofjs.com/en-US/&quot; title=&quot;State of JS 2020&quot;&gt;2020.stateofjs.com/en-US/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript開発者アンケートであるState of JS 2020の結果が公開された。&lt;br&gt;
言語、ライブラリ、ツール、エディタ、リソースなど各項目ごとに認知、満足度、興味、利用しているかなどをアンケートをとったもの&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;znck-vue-developer-experience-a-collection-of-tools-for-vue-ecosystem&quot;&gt;znck/vue-developer-experience: A collection of tools for vue ecosystem.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/znck/vue-developer-experience&quot; title=&quot;znck/vue-developer-experience: A collection of tools for vue ecosystem.&quot;&gt;github.com/znck/vue-developer-experience&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueに関するツール、VSCodeプラグインを扱うリポジトリ。&lt;br&gt;
静的解析ツール、パーサ、ASTヘルパー、VScode向けのプラグインなどが含まれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;imolorhe-altair-a-beautiful-feature-rich-graphql-client-for-all-platforms&quot;&gt;imolorhe/altair: ✨⚡️ A beautiful feature-rich GraphQL Client for all platforms.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imolorhe/altair&quot; title=&quot;imolorhe/altair: ✨⚡️ A beautiful feature-rich GraphQL Client for all platforms.&quot;&gt;github.com/imolorhe/altair&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;EmEditor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLクライアントのIDE&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist-tsup-bundle-your-typescript-library-with-no-config-powered-by-esbuild&quot;&gt;egoist/tsup: Bundle your TypeScript library with no config, powered by esbuild.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/tsup&quot; title=&quot;egoist/tsup: Bundle your TypeScript library with no config, powered by esbuild.&quot;&gt;github.com/egoist/tsup&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildを使ったTypeScriptのコードをbundleしてesm,cjs,iife形式のコードを出力するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tw-in-js-twind-the-smallest-fastest-most-feature-complete-tailwind-in-js-solution-in-existence&quot;&gt;tw-in-js/twind: The smallest, fastest, most feature complete Tailwind-in-JS solution in existence.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tw-in-js/twind&quot; title=&quot;tw-in-js/twind: The smallest, fastest, most feature complete Tailwind-in-JS solution in existence.&quot;&gt;github.com/tw-in-js/twind&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tailwind CSSをCSS-in-JSで行うライブラリとツール。&lt;br&gt;
Template Literalを使ったクラスの生成するAPI、SSR向けにCSSファイルの作成、ビルド無しでTailwindクラスを利用するshimライブラリなどを提供する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tomeraberbach-grfn-a-tiny-400b-utility-that-executes-a-dependency-graph-of-async-functions-as-concurrently-as-possible&quot;&gt;TomerAberbach/grfn: 🦅 A tiny (~400B) utility that executes a dependency graph of async functions as concurrently as possible.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TomerAberbach/grfn&quot; title=&quot;TomerAberbach/grfn: 🦅 A tiny (~400B) utility that executes a dependency graph of async functions as concurrently as possible.&quot;&gt;github.com/TomerAberbach/grfn&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Promiseを使った非同期処理のコントロールフローを管理するライブラリ。&lt;br&gt;
デバッグ用にコントールフローの図を生成する機能を持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;natemoo-re-microsite-a-fast-opinionated-static-site-generator-powered-by-snowpack-build-simple-static-sites-with-fool-proof-performance-by-leveraging-automatic-partial-hydration&quot;&gt;natemoo-re/microsite: A fast, opinionated static site generator powered by Snowpack. Build simple static sites with fool-proof performance by leveraging automatic partial hydration.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/natemoo-re/microsite&quot; title=&quot;natemoo-re/microsite: A fast, opinionated static site generator powered by Snowpack. Build simple static sites with fool-proof performance by leveraging automatic partial hydration.&quot;&gt;github.com/natemoo-re/microsite&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SnowpackとPreactを使ったNext.jsライクなディレクトリ構造のルールを持った静的サイトジェネレーター&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github-jtml-write-html-in-javascript-using-template-tags&quot;&gt;github/jtml: Write HTML in JavaScript, using template-tags.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/jtml&quot; title=&quot;github/jtml: Write HTML in JavaScript, using template-tags.&quot;&gt;github.com/github/jtml&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubのlit-htmlインスパイアなテンプレートレンダリングライブラリ。&lt;br&gt;
WHAWG HTMLで提案中のTemplate Partsの実装を含んでいる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;catalyst&quot;&gt;Catalyst&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.github.io/catalyst/&quot; title=&quot;Catalyst&quot;&gt;github.github.io/catalyst/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubのWeb Componentsライブラリ。&lt;br&gt;
Custom Elementの登録、Stimulusインスパイアな&lt;code&gt;data-action&lt;/code&gt;属性を使ったイベントリスナー、Custom Element内からHTMLの要素を紐付けるクエリ機能を持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2018-09-06-removing-jquery-from-github-frontend/&quot; title=&quot;Removing jQuery from GitHub.com frontend - The GitHub Blog&quot;&gt;Removing jQuery from GitHub.com frontend - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-it-kindle-amazon&quot;&gt;JavaScript［完全］入門 | 柳井 政和 | コンピュータ・IT | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B08PKHSVFZ/&quot; title=&quot;JavaScript［完全］入門 | 柳井 政和 | コンピュータ・IT | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B08PKHSVFZ/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年2月4日 発売&lt;br&gt;
JavaScriptの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 18 Jan 2021 11:02:00 +0900</pubDate>
        <link>https://jser.info/2021/01/18/snowpack-3.0-front-end-performance-checklist-state-of-js-2020/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/18/snowpack-3.0-front-end-performance-checklist-state-of-js-2020/</guid>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>browser</category>
        
        <category>WebComponents</category>
        
        <category>Vue</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>JSer.info 10周年: JavaScript情報の集め方、書き方、まとめ方</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;は2011年1月16日に公開したJavaScriptの情報サイトで、2021年1月16日で公開してからちょうど10年です。&lt;br&gt;
JSer.infoでは、10年間で10201サイト紹介し、522コの記事書いてきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/jser.info-site-count.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/jser.info-site-count.png&quot; alt=&quot;JSer.infoの紹介したサイト数&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSer.infoの紹介したサイト数(累計)。&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Sr2-_eEXD7BD4Y5cpaJ3y6T1hMqULEdPhUlwULowkxg/edit?usp=sharing&quot;&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;10年間途切れることなく毎週更新していて、月別の記事数は毎年同じ推移です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/15-1610642788.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/15-1610642788.png&quot; alt=&quot;JSer.infoの月別の記事数&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSer.infoの月別の記事数。&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1Sr2-_eEXD7BD4Y5cpaJ3y6T1hMqULEdPhUlwULowkxg/edit?usp=sharing&quot;&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この記事では、10年間やってきたJSer.infoの目的を振り返り、&lt;br&gt;
JavaScriptの情報の集め方、書き方、まとめ方について書いていきたいと思います。&lt;/p&gt;

&lt;p&gt;⚠️ すべてを書いているのでものすごく長いです。&lt;/p&gt;

&lt;p&gt;この記事やJSer.infoに関する意見や感想などは、次の場所に書いてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;jser_info&quot;&gt;この記事をTweetする&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/search?f=realtime&amp;q=%23jserinfo&quot;&gt;#jserinfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub Issue: &lt;a href=&quot;https://github.com/jser/jser.info/issues/115&quot;&gt;JSer.info 10th anniversary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;記事の&lt;a href=&quot;#js-disqus-embed&quot;&gt;コメント欄&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;part-6542e0ed748&quot;&gt;目次&lt;/h2&gt;

&lt;!-- &lt;a name&gt; should be translated --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#JSer.info%E3%81%AE%E7%9B%AE%E7%9A%84&quot;&gt;JSer.infoの目的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#JavaScript%E3%81%AB%E8%88%88%E5%91%B3%E3%81%8C%E3%81%82%E3%82%8B%E4%BA%BA%E3%81%AB%E3%82%82%E3%81%A3%E3%81%A8JavaScript%E3%82%92%E7%9F%A5%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%86&quot;&gt;JavaScriptに興味がある人にもっとJavaScriptを知ってもらう&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BA%BA%E3%81%AB%E3%82%88%E3%81%A3%E3%81%A6%E6%AC%B2%E3%81%97%E3%81%84%E6%83%85%E5%A0%B1%E3%81%AF%E7%95%B0%E3%81%AA%E3%82%8B&quot;&gt;人によって欲しい情報は異なる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#JSer.info%E3%81%AE%E6%83%85%E5%A0%B1%E3%81%AE%E9%9B%86%E3%82%81%E6%96%B9&quot;&gt;JSer.infoの情報の集め方&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#GitHub&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%A4%9C%E7%B4%A2%E7%B5%90%E6%9E%9C&quot;&gt;検索結果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SNS&quot;&gt;SNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#dailyweeklymontly&quot;&gt;Daily/Weekly/Montly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#aggregation&quot;&gt;アグリゲーション/HN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#blog&quot;&gt;ブログ/サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9B%B8%E7%B1%8D&quot;&gt;書籍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#JavaScript%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E6%AD%A3%E7%A2%BA%E3%81%AB%E4%BC%9D%E3%81%88%E3%82%8B&quot;&gt;JavaScriptの情報を整理して正確に伝える&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#JSer.info-Policy&quot;&gt;JSer.info Policy&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#do&quot;&gt;Do&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%83%85%E5%A0%B1%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E4%BC%9D%E3%81%88%E3%81%BE%E3%81%99&quot;&gt;情報を整理して伝えます&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BA%8B%E5%AE%9F%E3%81%A8%E3%83%95%E3%82%A7%E3%82%A2%E3%83%8D%E3%82%B9%E3%82%92%E8%BF%BD%E6%B1%82%E3%81%97%E3%81%BE%E3%81%99&quot;&gt;事実とフェアネスを追求します&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%83%85%E5%A0%B1%E6%BA%90%E3%81%AB%E6%95%AC%E6%84%8F%E3%82%92%E6%89%95%E3%81%84%E3%81%BE%E3%81%99&quot;&gt;情報源に敬意を払います&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E6%88%90%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%82%92%E5%8F%97%E3%81%91%E5%85%A5%E3%82%8C%E3%81%BE%E3%81%99&quot;&gt;完成していないことを受け入れます&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#DoNot&quot;&gt;Do Not&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%83%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E3%81%99%E3%81%B9%E3%81%A6%E3%82%92%E4%BC%9D%E3%81%88%E3%82%8B%E3%81%AE%E3%81%AF%E7%9B%AE%E7%9A%84%E3%81%A7%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%9B%E3%82%93&quot;&gt;元サイトのすべてを伝えるのは目的ではありません&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9B%B4%E6%96%B0%E3%82%B3%E3%82%B9%E3%83%88%E3%82%92%E5%B0%8F%E3%81%95%E3%81%8F%E3%81%97%E3%81%A6%E7%B6%99%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E5%BD%A2%E3%82%92%E4%BD%9C%E3%82%8B&quot;&gt;更新コストを小さくして継続できる形を作る&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#JSer.info%E3%81%AE%E6%9B%B4%E6%96%B0%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC&quot;&gt;JSer.infoの更新ワークフロー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9B%B4%E6%96%B0%E3%82%B3%E3%82%B9%E3%83%88%E3%81%AE%E5%89%8A%E6%B8%9B&quot;&gt;更新コストの削減&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#HubMemo&quot;&gt;HubMemo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script&gt;
window.addEventListener('DOMContentLoaded', () =&gt; {
    const contentRanges = [
        {
            start: &quot;JavaScriptに興味がある人にもっとJavaScriptを知ってもらう&quot;,
            end: &quot;JavaScriptの情報を整理して正確に伝える&quot;,
            color: &quot;#14c828&quot; // green
        },
        {
            start: &quot;JavaScriptの情報を整理して正確に伝える&quot;,
            end: &quot;更新コストを小さくして継続できる形を作る&quot;,
            color: &quot;#3dd8ec&quot; // blue
        },
        {
            start: &quot;更新コストを小さくして継続できる形を作る&quot;,
            end: &quot;おわりに&quot;,
            color: &quot;#c82814&quot; // red
        },
        {
            start: &quot;JSer.info-Policy&quot;,
            end: &quot;JSer.info-Policy-end&quot;,
            color: &quot;#713dec&quot; // blue+
        }
    ];
    const warpWithRange = (range, wrappingNode) =&gt; {
        wrappingNode.appendChild(range.extractContents());
        range.insertNode(wrappingNode);
    };
    contentRanges.forEach((item) =&gt; {
        const range = document.createRange();
        range.setStart(document.querySelector(`[name=&quot;${item.start}&quot;]`), 0);
        range.setEnd(document.querySelector(`[name=&quot;${item.end}&quot;]`), 0);
        const div = document.createElement(&quot;div&quot;);
        div.className = &quot;tenth-page-wrapped-content&quot;
        div.style.borderLeft = &quot;2px solid &quot; + item.color;
        warpWithRange(range, div);
    });
});
&lt;/script&gt;

&lt;style&gt;
.tenth-page-wrapped-content {
    margin-left: -1em;
    padding-left: 1em
}

@media screen and (max-width: 500px) {
    .tenth-page-wrapped-content {
        margin-left: -0.5em;
        padding-left: 0.5em
    }
}
&lt;/style&gt;

&lt;p&gt;&lt;a name=&quot;JSer.infoの目的&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;jser-info&quot;&gt;JSer.infoの目的&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/about/&quot;&gt;JSer.infoについて - JSer.info&lt;/a&gt;に、JSer.infoを始めた経緯を書いています。&lt;br&gt;
JSer.infoの目的をあらためて振り返ると次のようなものです。&lt;/p&gt;

&lt;ul&gt;
&lt;li style=&quot;border-left: 3px solid #14c828; padding-left: 3px;&quot;&gt;「JavaScriptに興味がある人にもっとJavaScriptを知ってもらう」&lt;/li&gt;
&lt;li style=&quot;border-left: 3px solid #3dd8ec; padding-left: 3px;&quot;&gt; 「JavaScriptの情報を整理して正確に伝える」&lt;/li&gt;
&lt;li style=&quot;border-left: 3px solid #c82814; padding-left: 3px;&quot;&gt; 「更新コストを小さくして継続できる形を作る」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この目的ごとに、今のJSer.infoを振り返ってみます。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;JavaScriptに興味がある人にもっとJavaScriptを知ってもらう&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;javascript-javascript&quot;&gt;「JavaScriptに興味がある人にもっとJavaScriptを知ってもらう」&lt;/h2&gt;

&lt;p&gt;JSer.infoではJavaScriptの&lt;strong&gt;最新の情報&lt;/strong&gt;を扱うことにしています。&lt;br&gt;
&lt;strong&gt;最新の情報&lt;/strong&gt;として分類する時に使える切り口(ファセット)としては次のようなものがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日付(正確)&lt;/li&gt;
&lt;li&gt;新規性(やや曖昧 - 過去に類似するものがあるかの調査が必要)&lt;/li&gt;
&lt;li&gt;トレンド(曖昧 - 人/世の中への依存)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いつリリースされたかいつ公開されたかという日付は一番で正確で曖昧性が低いです。&lt;br&gt;
そのため、JSer.infoでは情報をまとめる時に &lt;code&gt;{YYYY}-{MM}-{DD}のJS&lt;/code&gt; という週単位の記事でまとめています。&lt;/p&gt;

&lt;p&gt;公開された記事やライブラリが今までなかったものであるかという新規性は、実際に調べてみることである程度わかります。&lt;br&gt;
流行り廃りのようなトレンドは、主観的な話題が混ざるため曖昧になりやすいです。&lt;/p&gt;

&lt;p&gt;JSer.infoには「JavaScriptの情報を整理して正確に伝える」という目的もあるため、&lt;br&gt;
曖昧なものより明確なものを好んで扱っています。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;人によって欲しい情報は異なる&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-a8a445e576890f2&quot;&gt;人によって欲しい情報は異なる&lt;/h3&gt;

&lt;p&gt;JSer.infoでは最新の情報を扱うという話でしたが、人によって欲しい情報は異なります。&lt;br&gt;
これは、その人が「新しい情報」なのか「トレンド」なのか「安定して使えるもの」といったどういう情報が欲しいかによって、情報の読み方は異なります。&lt;/p&gt;

&lt;p&gt;技術的な情報には受け取りたい情報によって、いくつかレイヤーがあると思います。&lt;br&gt;
次の図は、「新しい情報」や「新規性」という切り口（ファセット）で、そのJavaScriptの情報を受け取れる場所?をレイヤーに分類してみた図です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/11-1610346286.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/11-1610346286.png&quot; alt=&quot;技術情報のレイヤー&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScriptの情報を「新しい情報」という視点でレイヤーを分けた図。&lt;br&gt;
実際にはレイヤーは重なるし、レイヤーの中身は人や求める情報によって異なるはずです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- https://excalidraw.com/#json=5861894099304448,8U0pJCDlif3ZhhlC5VzDNQ --&gt;

&lt;p&gt;たとえば、「JavaScriptの新しい情報」がほしいなら、Awareness(認知)のレイヤーの情報を見た方が新しいものは見つかりやすいです。&lt;br&gt;
今現在(2021年)ならGitHubが圧倒的な元ソースとなっているので、GitHubを上手く見る方法が必要です。&lt;br&gt;
欲しい情報によって何がソースになるかは変わってしまうので、最新のJavaScript情報はGitHubに多いという話でしかありません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/11-1610349706.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/11-1610349706.png&quot; alt=&quot;JSer.infoのドメイン別での紹介数の推移&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSer.infoのドメイン別での紹介数の推移の図。&lt;br&gt;&lt;br&gt;
GitHubの比率が大きい。&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1YEjEuqWF2ISHfu9mpa3BN-dXBr_-I-ZUixYRwSpqAyA/edit?usp=sharing&quot;&gt;ソース&lt;/a&gt;、&lt;a href=&quot;https://jser.info/data-dashboard/&quot;&gt;元データ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;何が流行っているのかという「JavaScriptのトレンドの情報」が欲しいなら、Interest(興味関心)のレイヤーの情報を見るのが良いかもしれません。&lt;br&gt;
具体的には、どういう人が使ってるのか見聞きしたり、ブログで利用事例を読んだりするのが、トレンドという曖昧なものを見るのには良いかもしれません。&lt;br&gt;
Aggregationのように複数のソースをある興味軸(カテゴリやタグ)などで分類して見るのも良さそうです。&lt;/p&gt;

&lt;p&gt;安定して実践的に使えるJavaScriptの情報が欲しいなら、Comparison(比較検討)のレイヤーの情報を見るのが良さそうです。&lt;br&gt;
ここには書籍、雑誌、メディアのような比較検討して整理された情報がありそうです。&lt;br&gt;
このレイヤーの情報はまとまるまで時間がかかるというデメリットもあります。&lt;br&gt;
一方で、最近はアグリゲーションのように単に集めるだけではなく、そこから更にカテゴライズ/フィルター/注釈などをして情報をより整理したものもあります。&lt;br&gt;
書籍、動画講座なども短いサイクルで逐次的にリリースしていく試みもあります。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;JSer.infoの情報の集め方&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;jser-info&quot;&gt;JSer.infoの情報の集め方&lt;/h3&gt;

&lt;p&gt;では、実際にJSer.infoではどのように情報を集めているかというと全部のレイヤーを見ていますという答えになってしまうので、もう少し掘り下げます。&lt;/p&gt;

&lt;p&gt;基本的には情報をRSSとして&lt;a href=&quot;https://www.inoreader.com/&quot;&gt;Inoreader&lt;/a&gt;に集めて、&lt;a href=&quot;https://github.com/azu/irodr&quot;&gt;Irodr&lt;/a&gt;で見ています。&lt;/p&gt;

&lt;p&gt;数にはあまり意味はありませんがRSSフィードの購読数は、&lt;a href=&quot;https://azu.github.io/slide/offline_study/jser_info.html#slide14&quot;&gt;2012年ごろは2000前後&lt;/a&gt;、&lt;a href=&quot;https://twitter.com/azu_re/status/517997359658070016&quot;&gt;2014年ごろは2800前後&lt;/a&gt;、&lt;a href=&quot;https://azu.github.io/slide/2017/jser_info/how_to_make_jser_info.html&quot;&gt;2017年ごろには3200前後&lt;/a&gt;、&lt;a href=&quot;https://twitter.com/azu_re/status/1345390860007919616&quot;&gt;2020年ごろには2600前後&lt;/a&gt;でした。&lt;br&gt;
この間にRSSフィードの管理方針は大きく変えていませんが、404となったりしたRSSフィードの購読を解除しています。(そのため減ったりしている)&lt;br&gt;
興味があるものについてのRSSフィードを増やしても、線形的に登録数が増え続けるのではなく、実際に更新されるものはある程度の数に収束しています。&lt;/p&gt;

&lt;p&gt;現在の購読しているRSSは3600前後です。これは、最近&lt;a href=&quot;https://github.com/azu/watch-rss&quot;&gt;watch-rss&lt;/a&gt;によってリポジトリのリリースRSSを自動的に追加するようにしたため、+1000ぐらい増えています。実際には毎日数個のリポジトリが更新される程度なので体感はほぼ変わらないです。&lt;/p&gt;

&lt;p&gt;どのようなものをみているかを、レイヤーごとに簡単にリソースを書いてみます。&lt;br&gt;
実際にはその他にあたるような個別のブログや人が情報源となる場合が多いでしょう。&lt;/p&gt;

&lt;p&gt;📝 JSer.infoでここ最近紹介したサイトを回数で分類したデータは、&lt;a href=&quot;https://jser.info/watch-list/&quot;&gt;JSer.info Watch List&lt;/a&gt;で参照できます。&lt;br&gt;
このリストに出てくるサイトは個別のRSSを登録していると思って間違いではない気がします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/watch-list/&quot;&gt;JSer.info Watch List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;⚠ 注意: ここでの情報の集め方は、最新の情報を集めるためという目的を元にしています。&lt;br&gt;
そのため、別の目的の場合はこの集め方が適切ではない可能性が高いです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a name=&quot;GitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;github&quot;&gt;GitHub&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/data-dashboard/&quot;&gt;JSer.info Data Dashboard&lt;/a&gt;によると、&lt;br&gt;
2020年の合計紹介アイテム数は810で、そのうち&lt;code&gt;github.com&lt;/code&gt;をソースとするアイテムは308コです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/jserinfo-by-domain.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/jserinfo-by-domain.png&quot; alt=&quot;JSer.infoで紹介したドメイン at 2020年&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSer.infoで紹介したドメインの比率 @ 2020年。 &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1lvuMvfncj2Yi_Dno19cvyJ1pp2kB1aKEjKo6Y3-YY8k/edit?usp=sharing&quot;&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;つまり、JSer.infoの30% ~ 40%程度はGitHubが元情報となっています。&lt;br&gt;
そのため、(逆説的でもありますが)GitHubを色々な方法で見ています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;トレンド&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mshibanami.github.io/GitHubTrendingRSS/&quot;&gt;GitHub Trending RSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rsshub.app/en/programming.html#github-trending&quot;&gt;RSSHub Trending&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHubには&lt;a href=&quot;https://github.com/trending&quot;&gt;Trending&lt;/a&gt;があるので、これをRSSで見ています。&lt;br&gt;
&lt;a href=&quot;https://efcl.info/2020/12/31/open-source-in-2020/&quot;&gt;今年のオープンソース活動振り返り @ 2020&lt;/a&gt;にも書いていましたが、GitHubのトレンドは一度のると複数日継続することが多かったり、どこかで話題になったものが載りやすいです。&lt;br&gt;
そのため、新規性や人気というよりは話題の収集に近いかたちだと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;イベント&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHubでWatchしているリポジトリのイベント通知

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/github-to-twitter-lambda&quot;&gt;github-to-twitter-lambda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHubで&lt;a href=&quot;https://github.com/watching&quot;&gt;Watchしているリポジトリ&lt;/a&gt;はだいたい2000ぐらいあり、半分は自分のリポジトリなので、1000リポジトリぐらいをWatchしています。&lt;br&gt;
このぐらいの数になるとNotificationで見るのは不可能であるため、GitHubの通知(privateは除く)をタイムラインの概念がある別の場所に流してみています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://efcl.info/2016/06/09/github-to-twitter-lambda/&quot;&gt;AWS lambdaでGitHubのアクティビティをTwitterで読む用に投稿する | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今は、&lt;a href=&quot;https://github.com/azu/github-to-twitter-lambda/tree/master/functions/discord&quot;&gt;github-to-discord&lt;/a&gt;でDiscordに流して、TwitterとDiscordを&lt;a href=&quot;https://github.com/kasper/phoenix&quot;&gt;Phoenix&lt;/a&gt;で&lt;a href=&quot;https://efcl.info/2020/12/31/open-source-in-2020/&quot;&gt;並べてみています&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://efcl.info/wp-content/uploads/2020/12/31-1609396746.png&quot; alt=&quot;TweetDeck and Discord&quot;&gt;&lt;/p&gt;

&lt;p&gt;このイベント情報(Star、Issue、Pull Request、Releaseなどがごちゃまぜ)は、実際に見ても流量が多くて得られる情報はほとんどありませんが、&lt;br&gt;
雰囲気を感じるために流しているという感じです。(実際に全部見ているわけではないです)&lt;/p&gt;

&lt;p&gt;たとえば、&lt;a href=&quot;https://github.com/microsoft/TypeScript&quot;&gt;TypeScript&lt;/a&gt;や&lt;a href=&quot;https://github.com/nodejs/node&quot;&gt;node&lt;/a&gt;などは単独のリポジトリとしても大きすぎてWatchするのは難しいですが、イベントを流しているとたまに目に入ったことから今やっていることに気づくことがあります。&lt;br&gt;
Twitterよりさらに雑にGitHubを雰囲気で読む感じだと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;リポジトリ&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User、Organizationに新しいリポジトリが作られたとき

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rsshub.app/en/&quot;&gt;RSSHub&lt;/a&gt; &amp;gt; &lt;a href=&quot;https://docs.rsshub.app/en/programming.html#cve-mitre-org&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;検索結果にリポジトリが増えたとき

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rsshub.app/en/&quot;&gt;RSSHub&lt;/a&gt; &amp;gt; &lt;a href=&quot;https://docs.rsshub.app/en/programming.html#cve-mitre-org&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;フォローしている人がスターしたリポジトリ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://starseeker.so/&quot;&gt;starseeker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en/&quot;&gt;RSSHub&lt;/a&gt;はいろんなサイトのRSSを生成できるサービスですが、&lt;a href=&quot;https://docs.rsshub.app/en/programming.html#cve-mitre-org&quot;&gt;GitHub&lt;/a&gt;の色々な情報をRSSにできます。&lt;/p&gt;

&lt;p&gt;たとえば、ECMAScriptのProposalは&lt;a href=&quot;https://github.com/tc39&quot;&gt;https://github.com/tc39&lt;/a&gt;にProposalのリポジトリを作る/移管するため、&lt;br&gt;
&lt;a href=&quot;https://rsshub.app/github/repos/tc39&quot;&gt;https://rsshub.app/github/repos/tc39&lt;/a&gt;を購読していれば、ECMAScriptの新しいProposalに気がつけます。&lt;/p&gt;

&lt;p&gt;他にも&lt;a href=&quot;https://github.com/WICG&quot;&gt;Web Incubator CG&lt;/a&gt;を見ていれば主にChromeの新しいWeb Platform APIを気づけますし、&lt;br&gt;
&lt;a href=&quot;https://github.com/privacycg/&quot;&gt;Privacy Community Group&lt;/a&gt;を見ていれば、Privacy系の新しい仕様に気がつきます。&lt;br&gt;
これは、現在のウェブ標準のプロセスにGitHubが絡んでいることが多いので、プロセスがわかっているものについては効率的に把握しやすいです。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/facebook/&quot;&gt;Facebook&lt;/a&gt;、&lt;a href=&quot;https://github.com/github/&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://github.com/microsoft/&quot;&gt;Microsoft&lt;/a&gt;などの企業のリポジトリ新着を見ていると面白い技術に会えたりもします。&lt;/p&gt;

&lt;p&gt;その他には、&lt;a href=&quot;https://starseeker.so/&quot;&gt;starseeker&lt;/a&gt;を使うとGitHubでフォローしている人がStarしたリポジトリをまとめて見れます。&lt;br&gt;
フォローしている人はだいたい興味が同じだと思うので、興味があるリポジトリを見つけやすいはずです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;リリース情報&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Watchベースのリリース情報のRSS: &lt;a href=&quot;https://github.com/azu/watch-rss&quot;&gt;watch-rss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Starベースのリリース情報のRSS: &lt;a href=&quot;https://bandito.re&quot;&gt;Bandito.re&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSer.infoではライブラリなどのリリースノートを良く扱います。&lt;br&gt;
ライブラリのほとんどはGitHubでリリースされているので、GitHubリポジトリごとのリリースRSSフィードを購読するのが確実です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://github.com/{author}/{repo}/releases.atom&lt;/code&gt; にリポジトリのリリースRSSフィードがあります&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://efcl.info/2014/07/30/find-github-release/&quot;&gt;以前似たような話を書いていました&lt;/a&gt;が、最近はGithubのWatchで&amp;quot;Release Only&amp;quot;が選べるようになったので、Watchしているリポジトリのリリース情報を自動でRSSとして購読する仕組みを作って見ています。&lt;br&gt;
&lt;a href=&quot;https://github.com/azu/watch-rss&quot;&gt;watch-rss&lt;/a&gt;は、WatchしているリポジトリのリリースRSSを&lt;a href=&quot;https://inoreader.com&quot;&gt;Inoreader&lt;/a&gt;で自動的に購読するツールです。そのため、今はWatchしたら自動的にRSSフィードに登録されて、RSSリーダで新しいリリースに気づけます。&lt;br&gt;
リポジトリ個別のRSSフィードなので、興味がないリポジトリ(またはmonorepoのような大量リリース)はスキップすればいいだけなので、リリース情報だけをみるのは効率が良い感じはします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/watch-rss&quot;&gt;watch-rss&lt;/a&gt;は&lt;a href=&quot;https://bandito.re&quot;&gt;Bandito.re&lt;/a&gt;を参考に実装しました。&lt;br&gt;
&lt;a href=&quot;https://bandito.re&quot;&gt;Bandito.re&lt;/a&gt;は、Starしたリポジトリのリリース情報をまとめたRSSフィードを作成してくれるサービスです。&lt;/p&gt;

&lt;p&gt;自分は、GitHubリポジトリを既読管理ぐらいの気持ちでStarを押してしまうので、量が多すぎてちゃんと見れるものではないですが、たまに昔Starしてものが出てきて発見できます。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;検索結果&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-2cdc555a52012a14&quot;&gt;検索結果&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.co.jp/alerts&quot;&gt;Google アラート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pmalerts.com/&quot;&gt;PMAlerts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rsshub.app/en/&quot;&gt;RSSHub&lt;/a&gt; など&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;検索結果の購読は最も難しいです。&lt;br&gt;
&amp;quot;JavaScript&amp;quot;のような単語で見ても、ほとんどがノイズとなって意味がある情報は見つけられません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pmalerts.com/&quot;&gt;PMAlerts&lt;/a&gt;の&lt;a href=&quot;https://www.karma.fm/p/LAGLWTx/5-social-listening-tips&quot;&gt;Karma - 5 social listening tips&lt;/a&gt;という話にもありますが、検索結果を見る場合には&amp;quot;網ではなく槍を使う&amp;quot;という話があります。&lt;br&gt;
具体的には、かなり検索結果が絞られるように検索ワードの組み合わせを見ていく形にしないとまともに機能しません。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;quot;JavaScript&amp;quot;&lt;/code&gt; ではなく &lt;code&gt;JavaScript Lightweight&amp;quot;&lt;/code&gt; のような範囲が絞られるようなワードにしないとノイズだらけになります。&lt;br&gt;
たとえば、ある会社の情報をGoogleアラートなどで追いたいなら &lt;code&gt;&amp;quot;CEOの名前 会社名&amp;quot;&lt;/code&gt; などを検索したものをメールやRSSで見るといった形です。&lt;br&gt;
(重要な決定や考え方などはだいたいCEOがインタビューなどで答えているので、そのような記事がかかりやすくなる)&lt;/p&gt;

&lt;p&gt;検索結果を追うのは難しいので、自分はそこまで受動的に検索結果を見ていません。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;SNS&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sns&quot;&gt;SNS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;無限にあります&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;📝 &lt;a href=&quot;https://twitter.com/jser_info/&quot;&gt;@jser_info&lt;/a&gt;のTwitterアカウントは、&lt;a href=&quot;https://realtime.jser.info/&quot;&gt;Realtime JSer.info&lt;/a&gt;の更新と記事が投稿されたことを通知します。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;dailyweeklymontly&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;daily-weekly-montly&quot;&gt;Daily/Weekly/Montly&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cooperpress.com/publications/&quot;&gt;Cooper Press Publications&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodeweekly.com/&quot;&gt;Node Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/&quot;&gt;JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webplatform.news/&quot;&gt;Web Platform News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mozaic.fm/&quot;&gt;mozaic.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://cooperpress.com/publications/&quot;&gt;Cooper Press Publications&lt;/a&gt;は&lt;a href=&quot;https://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;などのWeeklyのニュースサイトをやっている会社です。&lt;br&gt;
&lt;a href=&quot;https://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;はJSer.infoの少し前に始まったメールマガジンで、今でも続いているサイトです。&lt;br&gt;
(&lt;a href=&quot;https://azu.github.io/Meta-Weekly/&quot;&gt;Meta Weekly&lt;/a&gt;にこのようなサイトをまとめていましたが、増えたり消えたりして整理できなくなりました。)&lt;/p&gt;

&lt;p&gt;この辺のニュース的なサイトは積みやすい感じがするので、自分のペースとリズムに合うものを探すのが良さそうです。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;aggregation&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-9a166aae618d776d&quot;&gt;アグリゲーション/ソーシャルブックマーク/ソーシャルニュース&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://topicdeck.com/&quot;&gt;Topic Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://menthas.com/&quot;&gt;Menthas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://daily.dev/&quot;&gt;daily.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://javascriptkicks.com/&quot;&gt;JavaScriptKicks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.echojs.com/&quot;&gt;Echo JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.designernews.co/&quot;&gt;Designer News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://techfeed.io/&quot;&gt;TechFeed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://b.hatena.ne.jp/&quot;&gt;はてなブックマーク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pinboard.in/&quot;&gt;Pinboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この辺は複数のRSSをまとめるアグリゲーションサービスや、はてなブックマークのようなソーシャルブックマーク、Hacker News(HN)のような投稿と投票の機能をもったソーシャルニュースなどのコミュニティ系のサービスです。&lt;/p&gt;

&lt;p&gt;どのサービスも共通している気がしますが、量が限定されている場合には質が良いと感じ、量が増えていくと質が悪くなっていくと感じる気がします。&lt;br&gt;
これは情報の量が増えると、求める情報とは異なるものも入ってきやすいからだと思います。（もしくは求める情報の種類が変わったのかもしれません）&lt;br&gt;
そのため、これらのサイトは自分の価値観に合うようなフィルターをもって見るのが良いと思います。&lt;/p&gt;

&lt;p&gt;たとえば、&lt;a href=&quot;https://topicdeck.com/&quot;&gt;Topic Deck&lt;/a&gt;は色々なRSSをまとめたアグリゲーションサイトです。&lt;br&gt;
ディレクトリ的な階層型のトピックを見る仕組みですが、上位のトピックは量が多すぎて見るのが難しいと思います。&lt;br&gt;
少し下の階層まで絞り込んで&lt;a href=&quot;https://topicdeck.com/web-dev/browser-eng/&quot;&gt;Web Browser Eng&lt;/a&gt;のようなブラウザベンダーに関するトピックに限定すると機能するイメージです。&lt;/p&gt;

&lt;p&gt;同じように他のサイトも、広すぎる範囲で見ようとすると破綻するので、なにかしらの方法でフィルタリングできたほうが情報量と質をコントールできると思います。&lt;br&gt;
たとえば、はてなブックマークなら&lt;a href=&quot;https://b.hatena.ne.jp/help/entry/favorite&quot;&gt;お気に入りユーザー機能&lt;/a&gt;を使う、Twitterなら&lt;a href=&quot;https://help.twitter.com/ja/using-twitter/twitter-lists&quot;&gt;リスト&lt;/a&gt;を使うなどです。&lt;/p&gt;

&lt;p&gt;📝 自分はIrodrで&lt;a href=&quot;https://mohritaroh.hateblo.jp/entry/20080222/1203626953&quot;&gt;レートで分類&lt;/a&gt;して読んでいるので、&lt;br&gt;
スキップしてもいいんだなぐらいの気持ちで眺めるために情報量が多いトピックも購読していることがあります。&lt;/p&gt;

&lt;p&gt;その他には、Slackなどで特定のコミュニティに入ってみる方法もありそうです。&lt;br&gt;
JSer.infoのslackでも、JavaScriptの情報を投稿してたりするので、興味がある人は見てみると良いかも知れません。&lt;br&gt;
次のリンクから誰でも参加できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://join.slack.com/t/jserinfo/shared_invite/zt-g2shzp7o-f_tj6OaphCAFw5Qlt2Jw0A&quot;&gt;JSer.info slack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;blog&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-afcd5685c799b889&quot;&gt;ブログ/サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;無限にあります&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/watch-list/&quot;&gt;JSer.info Watch List&lt;/a&gt;というサイトに、ここ数年で一度でもJSer.infoで紹介したことあるサイトを一覧できるようになっています。&lt;br&gt;
タグ別にフィルタリングもできるので、興味の分類で気になるサイトを見つけることができるかも知れません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/watch-list/&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/15-1610718504.png&quot; alt=&quot;JSer.info Watch List&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;その他には、&lt;a href=&quot;https://2020.stateofjs.com/en-US/resources/&quot;&gt;State of JS 2020: Resources&lt;/a&gt;のアンケート結果に有名所は並んでいます。&lt;/p&gt;

&lt;p&gt;ブログは個人サイトではなくQiitaやMediumなどのサービスで書いている人も多いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/&quot;&gt;Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/&quot;&gt;Zenn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/&quot;&gt;dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのサイトはタグや人単位でRSS購読できるようになっています。&lt;br&gt;
タグを購読する場合、最初のうちはタグでみるとちょうど良いのですが、やはり記事の流量が増えてくるとタグという網が崩壊します。&lt;/p&gt;

&lt;p&gt;たとえば、Mediumの&lt;a href=&quot;https://medium.com/feed/tag/JavaScript&quot;&gt;JavaScriptというタグ&lt;/a&gt;を購読するのは無謀だと思います。&lt;br&gt;
この場合は、別の方法で見たり、RSS自体を加工したり、&lt;a href=&quot;https://www.inoreader.com/blog/2020/06/rules-and-filters-are-now-available-on-inoreader-for-android-and-ios.html&quot;&gt;RSSリーダ側でフィルタリング&lt;/a&gt;するなどの工夫が必要そうです。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;書籍&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-6542bbf2f43&quot;&gt;書籍&lt;/h3&gt;

&lt;p&gt;あまり追いかけていませんが、最近はGoogle Books APIの検索結果をRSSとして読めるツールを作って、新着の書籍を見ています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/book-rss&quot;&gt;azu/book-rss: Book RSS Feed generator.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Oreilly(日本と英語)はどちらもまとまったものがあるので見ています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.oreilly.co.jp/feeds/&quot;&gt;O&amp;#39;Reilly Japan - Feeds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/feeds/&quot;&gt;O&amp;#39;Reilly RSS Feeds - O&amp;#39;Reilly Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;しかしながら、最近は出版物ではない技術書もあると思うので、そういうのは見つけにくいかも知れません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;他にも過去にいろいろな情報の集め方について書いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2011: &lt;a href=&quot;https://www2.slideshare.net/efcl/javascript-6580879&quot;&gt;世界のJavaScript情報を読もう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012: &lt;a href=&quot;https://azu.github.io/slide/offline_study/javascript_world.html#slide1&quot;&gt;世界のJavaScriptを読もう @ 2012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2014: &lt;a href=&quot;https://azu.github.io/slide/jser200/javascript-2014.html&quot;&gt;世界のJavaScriptを読もう @ 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2016: &lt;a href=&quot;https://azu.github.io/slide/2016/jser5years/javascript-information.html&quot;&gt;JavaScript情報ってなんだっけ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2017: &lt;a href=&quot;https://azu.github.io/slide/2017/jser_info/how_to_make_jser_info.html&quot;&gt;JSer.infoの作り方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018: &lt;a href=&quot;https://jser.info/2018/01/15/jser-info-7years/&quot;&gt;JSer.infoを開始してから7年が経ちました - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013+:&lt;a href=&quot;https://github.com/jser/jser.info/issues/2&quot;&gt;最近のJavaScript情報の探し方 · Issue #2 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/azu/0bcc77ffb6dbb9918f02&quot;&gt;Node.js／JavaScriptの情報収集手段 ～変化が激しいOSSは、直接GitHubをウォッチしない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ベースにRSSを置くところはずっと変わっていませんが、何をRSSで見ているかは度々変わっています。&lt;br&gt;
これはRSSを使って受動的に情報を集めるために、能動的に仕組みを作ってるという話でもあります。&lt;/p&gt;

&lt;p&gt;あるサービスに依存した収集だと、そのサービスや価値観が変わり「なんかだめだな」と思った時に、仕組み自体を変える必要があるためコストは大きいです。&lt;br&gt;
RSSの場合は、なんかだめだったら、フィードを解除するだけでいいので気楽です。&lt;br&gt;
少しモジュール的な感じになっていて、新しい仕組み(RSS)に移動するだけなので単純です。&lt;/p&gt;

&lt;p&gt;自分は偶然的な出会いのためにRSSを使ってる部分もあります。&lt;br&gt;
たとえば、&lt;a href=&quot;https://npmaddict.com/&quot;&gt;npm addict&lt;/a&gt;を購読しているのですが、このRSSはnpmパッケージをRSSとして流しています。&lt;br&gt;
ほとんど絞り込みがないnpmの新着なので、検索結果のRSSのようにあんまり意味があるものを見つけられることはほとんどありません。&lt;br&gt;
普段は低いレートのフォルダに入っているのでスキップしてるだけです。&lt;/p&gt;

&lt;p&gt;あるとき&lt;a href=&quot;https://npmaddict.com/&quot;&gt;npm addict&lt;/a&gt;を見ていて、偶然&lt;code&gt;@web&lt;/code&gt;という面白い名前のパッケージがpublishされたことに気づいて、&lt;a href=&quot;https://modern-web.dev/blog/introducing-modern-web/&quot;&gt;Introducing: Modern Web&lt;/a&gt;にたどり着いたことがあります。&lt;br&gt;
こういう偶然の発見もあったりしますが、あまりおすすめはしません。&lt;/p&gt;

&lt;p&gt;JavaScriptにかぎらず情報収集は、自分が欲しい情報に合わせた見つけ方が必要です。&lt;br&gt;
また、同じサイトやサービスを見ていても、手に入る情報やその価値は変化してきます。&lt;br&gt;
そのため、今の自分に合わせた情報の集め方が必要になると思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;では、これらの集めた情報を使って、質と量が安定した記事となるように更新しています。&lt;br&gt;
これは、2つ目の目的である「JavaScriptの情報を整理して正確に伝える」ためです。&lt;/p&gt;

&lt;p&gt;単純に集めた情報を流すと量と質のバランスに問題がでるため「JavaScriptの情報を整理して正確に伝える」ことが難しくなります。&lt;br&gt;
実際にJSer.infoではどのようなことを意識して情報を整理しているかを見ていきます。&lt;/p&gt;

&lt;p&gt;⚠ この記事は、普段の投稿と違っていろんなバランスを無視して詰め込んでいます。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;JavaScriptの情報を整理して正確に伝える&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;「JavaScriptの情報を整理して正確に伝える」&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;では、2-3行の説明文とともにサイト(URL)を紹介します。&lt;br&gt;
この説明文は、サイトの内容を検証してどのような言葉を使って、どのような言葉は使わないで説明するかを考えて説明文を書いています。&lt;br&gt;
以前、&lt;a href=&quot;https://azu.github.io/slide/2017/jser_info/how_to_make_jser_info.html&quot;&gt;JSer.infoの作り方&lt;/a&gt;というスライドでも紹介しています。&lt;/p&gt;

&lt;p&gt;10年間で、10201のサイトを紹介し、合計で&lt;a href=&quot;https://github.com/jser/content-size-2021&quot;&gt;71万文字&lt;/a&gt;の説明文を書いています。&lt;br&gt;
そのため、このサイトの内容をどうやって整理して説明文にして伝えるかという部分についても、ある程度考え方がまとまってきました。&lt;/p&gt;

&lt;p&gt;今回は10周年を記念して&lt;a href=&quot;https://jser.info/policy/&quot;&gt;JSer.info Policy&lt;/a&gt;という形で、情報を整理して正確に伝えるためにどのような考えでやっているかを明文化してみました。&lt;br&gt;
明文化するにあたっては、DoとDo Notに分けています。基本的には何をするべきかというDoの考え方で整理しています。Do Notで書くと無限に増えてしまうためです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a name=&quot;JSer.info-Policy&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;jser-info-policy&quot;&gt;&lt;a href=&quot;https://jser.info/policy/&quot;&gt;JSer.info Policy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;JSer.info Policyでは「JavaScriptの情報を整理して正確に伝える」という目的を満たすための考え方を書いています。&lt;/p&gt;

&lt;p&gt;ここでの用語は次のような意味です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;元サイト

&lt;ul&gt;
&lt;li&gt;紹介する予定の元データとなるサイト/記事/動画/書籍などのこと&lt;/li&gt;
&lt;li&gt;サイトではないこともあるがまとめて&amp;quot;元サイト&amp;quot;と呼ぶ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;アイテム

&lt;ul&gt;
&lt;li&gt;紹介する元サイトのURLやそれに関する説明文、タグ、関連URLなどをまとめたものを1つのアイテムと呼ぶ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;記事

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;に公開している記事のこと&lt;/li&gt;
&lt;li&gt;記事はアイテムをまとめたもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;Do&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;do&quot;&gt;Do&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;情報を整理して伝えます&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;part-ec35668b07d3c579&quot;&gt;情報を整理して伝えます&lt;/h4&gt;

&lt;p&gt;JSer.infoでは、元サイトからアイテムを作成する際には、元サイトの内容を整理します。&lt;br&gt;
整理とは、元サイトの内容を抽出、要約、補足、言い換え、グルーピングなどの分かりやすくするための作業のことです。&lt;/p&gt;

&lt;p&gt;整理は、元サイトの内容を解釈の揺れが起きにくい形にし、元サイトの概要をわかりやすく伝えることを目的にしています。&lt;/p&gt;

&lt;p&gt;整理には元サイトのすべての内容から一部を削ったり、別の言い方への変更も含まれます。&lt;br&gt;
元サイトの内容をすべてそのまま伝えることは目的ではありません。&lt;br&gt;
詳しくは、「&lt;a href=&quot;#%E5%85%83%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E3%81%99%E3%81%B9%E3%81%A6%E3%82%92%E4%BC%9D%E3%81%88%E3%82%8B%E3%81%AE%E3%81%AF%E7%9B%AE%E7%9A%84%E3%81%A7%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%9B%E3%82%93&quot;&gt;元サイトのすべてを伝えるのは目的ではありません&lt;/a&gt;」を参照してください。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;整理に関する作業&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;グルーピング

&lt;ul&gt;
&lt;li&gt;リリースノートなら&lt;code&gt;major&lt;/code&gt;/&lt;code&gt;minor&lt;/code&gt;/&lt;code&gt;patch&lt;/code&gt;を意識してまとめる

&lt;ul&gt;
&lt;li&gt;破壊的な変更、機能追加と修正でまとめる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;種類でまとめて順番に見れば分かる形にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;リリースノート

&lt;ul&gt;
&lt;li&gt;意見と事実を分ける&lt;/li&gt;
&lt;li&gt;具体的なコードの変更を対応付ける&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;元サイトの目的

&lt;ul&gt;
&lt;li&gt;元サイトの目的を明らかにして伝える&lt;/li&gt;
&lt;li&gt;現実の実装と目的が離れているときがある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;行き違いのある言葉を減らす

&lt;ul&gt;
&lt;li&gt;軽量、互換など解釈の違いが起きやすい言葉に補足を加える or 置き換える&lt;/li&gt;
&lt;li&gt;互換性はどこまで目指しているのかという目的に置き換える&lt;/li&gt;
&lt;li&gt;軽量は具体的に何が(サイズ、パフォーマンス)軽量なのかを分かるようにする または 具体的な数字へと置き換える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;関連リソース

&lt;ul&gt;
&lt;li&gt;関連する/依存するリソースを関連アイテムとしてまとめる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;事実とフェアネスを追求します&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;part-45b8e956772eff99&quot;&gt;事実とフェアネスを追求します&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;では、事実を検証してフェアネス(公平性)の追求に努めます。&lt;/p&gt;

&lt;p&gt;元サイトの技術的な内容を検証し、その内容が事実であるかを確認します。&lt;br&gt;
内容を整理する際には、中立で客観的であることに注意を払いフェアであることに努めます。&lt;br&gt;
ただし、事実であってもデータが不完全であることから、統計的差別などが含まれている可能性があることに注意します。&lt;/p&gt;

&lt;p&gt;また、アイテムは誰もがアクセスできるデータに基づき整理します。&lt;br&gt;
これは、誰もが同じデータを検証できることがフェアであるためです。&lt;/p&gt;

&lt;p&gt;アイテムや記事として整理したものに訂正すべき間違いやフェアネスを逸脱する内容については、速やかに訂正します。&lt;br&gt;
詳しくは、「&lt;a href=&quot;#%E5%AE%8C%E6%88%90%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%82%92%E5%8F%97%E3%81%91%E5%85%A5%E3%82%8C%E3%81%BE%E3%81%99&quot;&gt;完成していないことを受け入れます&lt;/a&gt;」を参照してください。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;事実とフェアネスに関する作業&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;技術的な嘘はつかない

&lt;ul&gt;
&lt;li&gt;技術的な嘘は目立つため検証の手間を省かない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;誇張表現をそのまま捉えない

&lt;ul&gt;
&lt;li&gt;伝聞して拡散する役割ではない&lt;/li&gt;
&lt;li&gt;事実を検証して整理する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;事実によるデータの差別は避ける

&lt;ul&gt;
&lt;li&gt;統計的差別のように元データが不完全であるため、その事実が見えている可能性があることに注意する&lt;/li&gt;
&lt;li&gt;トレンドデータ

&lt;ul&gt;
&lt;li&gt;トレンドデータについては曖昧性が含まれていることを意識する&lt;/li&gt;
&lt;li&gt;日付(正確)&lt;/li&gt;
&lt;li&gt;新規性(やや曖昧 - 類似の調査が必要)&lt;/li&gt;
&lt;li&gt;トレンド(曖昧 - 人/世の中への依存)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;アンケート

&lt;ul&gt;
&lt;li&gt;アンケートには回答者によるデータの偏りが発生しやすい&lt;/li&gt;
&lt;li&gt;アンケートの回答者の地域によっても差が出てくることがある&lt;/li&gt;
&lt;li&gt;アンケートの結果については、元データに対する注釈を入れる または アイテムとする時にデータに対する結論に対しては扱わない(読み手の解釈に委ねる)など&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人が容認できない言葉を避ける

&lt;ul&gt;
&lt;li&gt;ジェンダー、差別、FUDなど、ただの差別になっていかを確認する&lt;/li&gt;
&lt;li&gt;アイテムが&lt;a href=&quot;https://github.com/jser/.github/blob/master/CODE_OF_CONDUCT.md&quot;&gt;コントリビューター行動規範&lt;/a&gt;に反した内容ではないかを確認する&lt;/li&gt;
&lt;li&gt;主観を取り除くことは難しいため、指摘は速やかに受け入れる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;偏り

&lt;ul&gt;
&lt;li&gt;意見の偏りを常に意識する&lt;/li&gt;
&lt;li&gt;客観的に整理する&lt;/li&gt;
&lt;li&gt;意見そのものが悪いわけではないため、記事としてバランスを意識する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Public/透明性

&lt;ul&gt;
&lt;li&gt;元サイトなどについては、誰もがなにかしらの方法でアクセスできる情報のみを扱う&lt;/li&gt;
&lt;li&gt;招待されないと見れない or 特定の人のみが見える情報をベースにして書かない&lt;/li&gt;
&lt;li&gt;これはデータの偏りを少なくためにも注意を払う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;比較する場合の事実と再現性

&lt;ul&gt;
&lt;li&gt;ベンチマークは注意して事実を検証する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;情報源に敬意を払います&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;part-c44a5d47b1f7bfca&quot;&gt;情報源に敬意を払います&lt;/h4&gt;

&lt;p&gt;情報源となる元サイトに敬意を払います。&lt;/p&gt;

&lt;p&gt;情報の本質は元サイトにあるため、JSer.info単独では完結しません。&lt;br&gt;
JSer.infoの目的は、元サイトを見てもらうことを促進することにあります。&lt;/p&gt;

&lt;p&gt;クロスポストされている場合には、できるだけオリジナルのものを元サイトとして扱います。&lt;br&gt;
翻訳に関しては、翻訳内容が元サイトを尊重しているかを確認してから元サイトとして扱います。&lt;/p&gt;

&lt;p&gt;また、元サイトのさらに元となる情報源がある場合には、関連リンクとしてその情報を含めます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;情報源に関する作業&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;目的はJavaScriptの情報を”紹介”ではなく”知ってもらう”事にある

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/about/&quot;&gt;JSer.infoについて - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;媒体の特性を見る

&lt;ul&gt;
&lt;li&gt;クロスポストサイト

&lt;ul&gt;
&lt;li&gt;できるだけクロスポストの作者オリジナルの記事を元サイトとして扱う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;転載

&lt;ul&gt;
&lt;li&gt;作者オリジナルの記事を元サイトとして扱う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;翻訳

&lt;ul&gt;
&lt;li&gt;翻訳がライセンスは正しいかを確認する&lt;/li&gt;
&lt;li&gt;翻訳が元の内容を逸脱するようなタイトルや内容に変更してないかを確認する&lt;/li&gt;
&lt;li&gt;翻訳の原文に対するリンクをアイテムの関連記事として入れる&lt;/li&gt;
&lt;li&gt;原文と翻訳がほぼ同時に公開されている場合は、原文を元サイトとして扱う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;元サイトの元

&lt;ul&gt;
&lt;li&gt;元サイトのさらに元サイトがあるなら関連リンクとして扱う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;完成していないことを受け入れます&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;part-b77f73a88940bc1e&quot;&gt;完成していないことを受け入れます&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;は、JSer.info単独で完結するサイトではありません。&lt;br&gt;
記事やアイテムにはさまざまサイトに依存した内容が書かかれているため、どの段階でも訂正や変更が入る不完全な状態です。&lt;/p&gt;

&lt;p&gt;元サイトの内容を整理する際には、解釈の間違いや誤記などが発生する可能性があります。&lt;br&gt;
アイテムや記事における間違いの指摘は、速やかに受け入れ訂正する必要があります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;完成していない作業&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;単独で完成していないことを意識する

&lt;ul&gt;
&lt;li&gt;膨大な情報を無理やりまとめて完成させようとすると、他のポリシーを逸脱しやすいことに注意する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;間違いの訂正は速やかに受け入れる

&lt;ul&gt;
&lt;li&gt;解釈の間違いが発生することはある&lt;/li&gt;
&lt;li&gt;どのタイミングでも、修正を受け入れることができるようにする&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info&quot; title=&quot;jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;アイテムのデータを修正したい場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.github.io&quot; title=&quot;jser/jser.github.io&quot;&gt;jser/jser.github.io&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;の記事を修正したい場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;分からないものを独自解釈しない

&lt;ul&gt;
&lt;li&gt;わからないものはわからないものとして扱う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;DoNot&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;do-not&quot;&gt;Do Not&lt;/h3&gt;

&lt;p&gt;&lt;a name=&quot;元サイトのすべてを伝えるのは目的ではありません&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;part-458bd2d3370d470f&quot;&gt;元サイトのすべてを伝えるのは目的ではありません&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;は、翻訳サイトではありません。&lt;br&gt;
そのため、元サイトの内容を一字一句正確な対訳で紹介することは目的ではありません。&lt;/p&gt;

&lt;p&gt;元サイトの内容を複製して伝えるのは目的ではありません。&lt;br&gt;
元サイトの内容を整理して伝えることが目的です。&lt;/p&gt;

&lt;p&gt;元サイトのすべてを完璧に伝えようとすることは目的ではありません。&lt;br&gt;
すべてを伝えることを目指してしまうと、単なる複製になってしまいます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;元サイトのすべてを伝えない作業&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;翻訳するのは目的ではありません

&lt;ul&gt;
&lt;li&gt;一字一句正確な対訳を作ることは目的でありません&lt;/li&gt;
&lt;li&gt;これは他のポリシーに反してしまいやすい&lt;/li&gt;
&lt;li&gt;情報を整理することを考え、取捨選択することを意識します&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;元サイトの内容を複製するのは役割ではありません

&lt;ul&gt;
&lt;li&gt;JSer.infoにすべての情報が集約される必要はないため、情報をすべて複製する必要はありません&lt;/li&gt;
&lt;li&gt;JSer.infoの目的は、紹介することではなく、知ってもらうためです&lt;/li&gt;
&lt;li&gt;そのため、必ずしもユーザーはJSer.info自体を見る必要はありません&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a name=&quot;JSer.info-Policy-end&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これらのことは&lt;a href=&quot;https://jser.info/policy/&quot;&gt;JSer.info Policy&lt;/a&gt;というドキュメントにまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web: &lt;a href=&quot;https://jser.info/policy/&quot;&gt;JSer.info Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/jser/policy&quot;&gt;https://github.com/jser/policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このポリシーをまとめるためのメモ書きは次のリポジトリのIssueに書いています。&lt;br&gt;
Issuesを見てみるとわかりますが、だいたいDo Notの形になっています。&lt;br&gt;
使わない言葉とかの方が具体的ですが、少し詳細になりすぎていたので、&lt;a href=&quot;https://jser.info/policy/&quot;&gt;JSer.info Policy&lt;/a&gt;ではやることという形式で書き直しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/information-communication-technology/issues&quot;&gt;Issues · azu/information-communication-technology&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「情報源に敬意を払います」というポリシーにもありますが、JSer.info自体が情報を作っているわけでありません。&lt;br&gt;
継続して新しいライブラリ、記事、プロダクトを作っている人たちがいることによって成り立っています。&lt;br&gt;
JSer.infoがこれらの継続した情報を伝えるためには、JSer.info自体が継続しやすい形になっている必要があります。&lt;/p&gt;

&lt;p&gt;このことは、「更新コストを小さくして継続できる形を作る」というJSer.infoの目的にもなっています。&lt;br&gt;
最後に、3つ目の目的である「更新コストを小さくして継続できる形を作る」を見ていきます。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;更新コストを小さくして継続できる形を作る&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-67a902ff57eb8136&quot;&gt;「更新コストを小さくして継続できる形を作る」&lt;/h2&gt;

&lt;p&gt;JSer.infoを開始した時に&lt;a href=&quot;https://azu.github.io/slide/offline_study/jser_info.html&quot;&gt;とりあえず2年は続ける&lt;/a&gt;と決めていました。&lt;br&gt;
これは継続的にやらないと、&lt;a href=&quot;#JavaScript%E3%81%AB%E8%88%88%E5%91%B3%E3%81%8C%E3%81%82%E3%82%8B%E4%BA%BA%E3%81%AB%E3%82%82%E3%81%A3%E3%81%A8JavaScript%E3%82%92%E7%9F%A5%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%86&quot;&gt;JavaScriptに興味がある人にもっとJavaScriptを知ってもらう&lt;/a&gt;ことや&lt;a href=&quot;#JavaScript%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E6%AD%A3%E7%A2%BA%E3%81%AB%E4%BC%9D%E3%81%88%E3%82%8B&quot;&gt;JavaScriptの情報を整理して正確に伝える&lt;/a&gt;ことが難しいと考えたためです。&lt;br&gt;
また、その継続コスト自体を下げていく必要性があるために設定した目標です。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;JSer.infoの更新ワークフロー&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;jser-info&quot;&gt;JSer.infoの更新ワークフロー&lt;/h3&gt;

&lt;p&gt;現在の更新ワークフローは、次の図のようなサイクルを1週間ぐらいの単位で繰り返しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/jser-info-workflow.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/jser-info-workflow.png&quot; alt=&quot;JSer.info Workflow&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;見る&lt;/li&gt;
&lt;li&gt;調べる&lt;/li&gt;
&lt;li&gt;検証する&lt;/li&gt;
&lt;li&gt;説明文を書く&lt;/li&gt;
&lt;li&gt;1 ~ 4を繰り返して一定数ためる → 共有(記事を書く)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;このサイクルについては、次のスライドや記事でも解説しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://azu.github.io/slide/2017/jser_info/how_to_make_jser_info.html&quot;&gt;JSer.infoの作り方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2018/01/15/jser-info-7years/&quot;&gt;JSer.infoを開始してから7年が経ちました - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;もう少し具体的な行動を書き出してみると、1サイトごとに次のようなことをやっています。&lt;/p&gt;

&lt;p&gt;例) &lt;a href=&quot;https://nullstack.app/&quot;&gt;Nullstack&lt;/a&gt;のケース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;見る: &lt;a href=&quot;https://github.com/azu/irodr&quot;&gt;Irodr&lt;/a&gt;でRSSを見ながら、&lt;a href=&quot;https://nullstack.app/&quot;&gt;Nullstack&lt;/a&gt;というフレームワークがでているのを見つける&lt;/li&gt;
&lt;li&gt;調べる: NullstackのREADMEやドキュメントなどを一通り読む&lt;/li&gt;
&lt;li&gt;検証: 

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nullstack.app/njs-file-extension&quot;&gt;NJS File Extension&lt;/a&gt;のclientとserverをそれぞれbundleするという挙動のイメージがつかないので実際に動かして検証する&lt;/li&gt;
&lt;li&gt;ドキュメント通りに &lt;code&gt;create-nullstack-app&lt;/code&gt; を使ってセットしてみようとしたら、 &lt;code&gt;create-nullstack-app&lt;/code&gt; が壊れてた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nullstack/create-nullstack-app/pull/1&quot;&gt;&lt;code&gt;create-nullstack-app&lt;/code&gt;を修正してPR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ローカルで修正したものを使って実際の動きを&lt;a href=&quot;https://github.com/azu/nullstack-example&quot;&gt;サンプルコードを検証する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;説明: 調べた内容と検証した内容を元に、&lt;a href=&quot;https://github.com/azu/postem&quot;&gt;Postem&lt;/a&gt;を使って&lt;a href=&quot;https://github.com/jser/jser.info/blob/f6f457af926d382eacc36d0461632ea260b063e3/data/2021/01/index.json#L48-L60&quot;&gt;説明文を書く&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;具体的にはpostemは&lt;a href=&quot;https://github.com/jser/jser.info/&quot;&gt;jser/jser.info&lt;/a&gt;というリポジトリにデータをコミットしている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;共有: 

&lt;ul&gt;
&lt;li&gt;他のサイトなども同様のループをしてある程度紹介するサイトが集まったら&lt;a href=&quot;https://github.com/jser/jser.github.io/pull/824&quot;&gt;記事更新用のPR&lt;/a&gt;を作る&lt;/li&gt;
&lt;li&gt;PRのbodyにヘッドラインを書くと、記事のヘッドラインに自動的に反映される&lt;/li&gt;
&lt;li&gt;記事として公開: &lt;a href=&quot;https://jser.info/2021/01/07/wasmer-1.0-2021-xstyled/&quot;&gt;2021-01-07のJS: Wasmer 1.0、2021年のウェブ標準とブラウザ、xstyled - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今のワークフローは、少しでも面倒さを感じたら自動化しています。&lt;/p&gt;

&lt;p&gt;例えば、初期のJSer.infoでは、次のようなワークフローで記事を更新していました&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;アイテムデータ(紹介したいサイトのデータ)を追加&lt;/li&gt;
&lt;li&gt;投稿前に、それぞれのアイテムを&amp;quot;アーティクル&amp;quot;とか&amp;quot;スライド&amp;quot;といったように手動でカテゴライズ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/jser.info/&quot;&gt;JSer.infoのアーカイブ&lt;/a&gt;というD&amp;amp;Dで分類できるツールを作っていた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;投稿用のHTMLデータを作ってコピペして、ヘッドラインを書き足して記事を作成する

&lt;ul&gt;
&lt;li&gt;この時にTumblrのエディタ画面は使いにくかった、別のエディタアプリで編集したりしていた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;投稿&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/15-1610637066.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/15-1610637066.png&quot; alt=&quot;初期のJSer.infoの更新作業&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;実際の動作は&lt;a href=&quot;https://jser.info/jser.info/&quot;&gt;JSer.infoのアーカイブ&lt;/a&gt;で見れます&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;現在では、次のようにCIが面倒な部分を自動化してくれるワークフローになっています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;に対してアイテムデータ(紹介したいサイトのデータ)をコミットする&lt;/li&gt;
&lt;li&gt;CIが次の投稿用の記事のドラフトとなるMarkdownファイルを作成して、&lt;a href=&quot;https://github.com/jser&quot;&gt;jser/jser.github.io&lt;/a&gt;に対してpushする

&lt;ul&gt;
&lt;li&gt;今までのカテゴライズしたデータを元にして、&lt;a href=&quot;https://github.com/jser/dataset/tree/master/packages/%40jser/classifier-item-category&quot;&gt;自動的にカテゴライズ&lt;/a&gt;する&lt;/li&gt;
&lt;li&gt;ついでに、&lt;a href=&quot;https://realtime.jser.info/&quot;&gt;Realtime JSer.info&lt;/a&gt;を更新&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pull Requestをブラウザ上で作って、Pull Requestの説明文を書いてマージ

&lt;ul&gt;
&lt;li&gt;Pull Requestのタイトルや説明欄を元に、ドラフトのMarkdownファイルに更新する&lt;a href=&quot;https://github.com/jser/jser.github.io/blob/ad89efe63b88ebc030d2efafbefa68dd48b55140/.github/workflows/update-draft-pr.yml&quot;&gt;GitHub Actions&lt;/a&gt;を動かしている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マージすると自動的に投稿される&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;今のワークフローではメモを書くところ以外は、ブラウザ内で完結しています。&lt;br&gt;
メモを書く作業は、色々なタブを行き来しながら書く必要があるため、Floating Windowでメモをサイトに重ねて書ける&lt;a href=&quot;https://github.com/azu/postem&quot;&gt;Postem&lt;/a&gt;を使っています。&lt;/p&gt;

&lt;p&gt;本当に人間がやることは、紹介したいサイトの説明文とタグを付けるのと、あとは記事のヘッドラインを書くだけです。&lt;br&gt;
どういう並び順で、どういうカテゴライズするかは過去のデータから学習して自動化されています。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;更新コストの削減&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-e9ba30922b19132d&quot;&gt;更新コストの削減&lt;/h3&gt;

&lt;p&gt;何かを続ける意欲を維持できるかは、続ける理由とやめる理由のバランスの問題です。&lt;br&gt;
やめる理由が続ける理由よりも大きくなれば、そこでやめてしまうと思います。&lt;/p&gt;

&lt;p&gt;情報収集自体はJSer.infoとは関係なく、良いコードを書くためするので、続ける理由については大きな変化はありません。&lt;br&gt;
そのためJSer.infoでは、やめる理由を小さくしていくことで、継続するためのバランスをとっています。&lt;/p&gt;

&lt;p&gt;そのために、更新ワークフローの自動化をしています。&lt;br&gt;
また、GitHub上で完結させることによって、アプリの切り替えといったコンテキストスイッチが発生しにくいような構造にしています。&lt;/p&gt;

&lt;p&gt;これらの自動化などはJSer.infoを更新しながら、面倒なところを徐々に修正していたら今の形になりました。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;HubMemo&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hubmemo&quot;&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;この長い記事をここまで読み進められた人は、おそらく自分と同じことができると思います。&lt;/p&gt;

&lt;p&gt;10周年を記念して、JSer.infoのような仕組みをワンクリックで作れる&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;というシステムを作りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;azu/hubmemo: Private/Public Memo system based on GitHub.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;は、GitHub上にメモをコミットすると、そのメモをまとめたものを記事として公開する仕組みをまとめたテンプレートリポジトリです。&lt;br&gt;
つまり、&lt;a href=&quot;https://github.com/jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;と&lt;a href=&quot;https://github.com/jser&quot;&gt;jser/jser.github.io&lt;/a&gt;でやっている仕組みを一つのリポジトリにまとめたものです。&lt;br&gt;
内部的には、&lt;a href=&quot;https://github.com/azu/hubmemo/tree/main/.github/workflows&quot;&gt;色々なGitHub Actions&lt;/a&gt;を使って、メモをコミットする仕組みや、メモから記事を作る仕組みを持っています。&lt;/p&gt;

&lt;p&gt;JSer.infoのようなサイトだけじゃなくて、ただのGitHubを使ったメモの仕組みとしても使えます。&lt;/p&gt;

&lt;h3 id=&quot;hubmemo&quot;&gt;HubMemoのセットアップ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;はテンプレートリポジトリなので、リポジトリを作るだけで準備完了です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/hubmemo/generate&quot;&gt;Use Template&lt;/a&gt;から、HubMemoを元にしたリポジトリを好きな名前で作成する

&lt;ul&gt;
&lt;li&gt;メモは非公開で、記事だけ公開したいならPrivateリポジトリでも作れます&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GitHub + Jekyllの場合は、リポジトリの&lt;code&gt;Branch: main &amp;gt; /docs&lt;/code&gt;がGitHub Pagesとして公開されるように設定します

&lt;ul&gt;
&lt;li&gt;設定方法: &lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/SETUP.md#deploy-setting&quot;&gt;https://github.com/azu/hubmemo/blob/main/guide/SETUP.md#deploy-setting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jekyllを使って記事を公開する場合はこれで完了です！

&lt;ul&gt;
&lt;li&gt;Jekyll以外で公開する場合は、&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/SETUP.md&quot;&gt;Setup Guide&lt;/a&gt;を見てください&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;hubmemo&quot;&gt;HubMemoにメモを追加する&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;は色々な方法でメモファイル(JSONとMarkdown)をコミットできます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Actionsを&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#via-http-api&quot;&gt;HTTP API&lt;/a&gt;経由で叩いてメモを追加する方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#via-git&quot;&gt;Git&lt;/a&gt;でファイルをコミットする方法&lt;/li&gt;
&lt;li&gt;GitHub Actionsの&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#via-gui&quot;&gt;GUI&lt;/a&gt;を使って追加する方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#via-issue&quot;&gt;Issue&lt;/a&gt;を作ると、そのIssueの内容をメモとして追加する方法&lt;/li&gt;
&lt;li&gt;JSer.infoで普段使っている&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#via-gui-application&quot;&gt;postem&lt;/a&gt;というGUIアプリを使った方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳細は&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md&quot;&gt;Usage&lt;/a&gt;のドキュメントを見てください。&lt;/p&gt;

&lt;h3 id=&quot;hubmemo&quot;&gt;HubMemoのメモから記事を公開する&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;でのメモはJSON(機械用)とMarkdown(人間用)の形式でそれぞれ追加されます。&lt;br&gt;
JSONはツールが処理しやすい形式で、Markdownは人間がメモを読むための形式です。&lt;br&gt;
（📝 JSer.infoでもJSON形式でメモを作っていたことで、自動化や&lt;a href=&quot;https://github.com/jser/dataset&quot;&gt;統計処理&lt;/a&gt;ができていたのでJSONで持っています）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;具体例: &lt;a href=&quot;https://github.com/azu/hubmemo-sandbox/tree/main/data/2021/01&quot;&gt;https://github.com/azu/hubmemo-sandbox/tree/main/data/2021/01&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メモが追加されると、自動的に記事を公開するドラフト用のPull Requestが作成されます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;メモをIssue経由で追加: &lt;a href=&quot;https://github.com/azu/hubmemo-sandbox/issues/7&quot;&gt;https://github.com/azu/hubmemo-sandbox/issues/7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;メモを追加すると、メモを含むドラフトPRを自動的に作成: &lt;a href=&quot;https://github.com/azu/hubmemo-sandbox/pull/8&quot;&gt;https://github.com/azu/hubmemo-sandbox/pull/8&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;あとはこのドラフトPRのファイルを更新して、マージすれば自動的にGitHub Pagesにブログとして公開できます。&lt;br&gt;
（📝 HubMemoはJSer.infoと同じように&lt;a href=&quot;https://github.com/azu/hubmemo/blob/main/guide/USAGE.md#publish-post&quot;&gt;PRのタイトルや説明欄を更新すると自動的にファイルと同期&lt;/a&gt;します）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;公開されたブログ: &lt;a href=&quot;https://azu.github.io/hubmemo-sandbox/&quot;&gt;https://azu.github.io/hubmemo-sandbox/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/hubmemo&quot;&gt;HubMemo&lt;/a&gt;は、JSer.infoのワークフローのエッセンスを取り出したシステムです。&lt;br&gt;
HubMemoを使って、自分用のメモを書いてみるのもいいし、それを整理して公開してみるのもよいと思います。&lt;/p&gt;

&lt;p&gt;また、HubMemoはGitHub上ですべて完結しているため、普通のオープンソースのようにコラボレーションしやすい気がします。&lt;br&gt;
JSer.infoも基本的にはGitHubで完結しているので、JSer.infoでのコラボレーションに興味がある人は、&lt;a href=&quot;https://twitter.com/azu_re&quot;&gt;@azu_re&lt;/a&gt;や&lt;a href=&quot;https://join.slack.com/t/jserinfo/shared_invite/zt-g2shzp7o-f_tj6OaphCAFw5Qlt2Jw0A&quot;&gt;JSer.info slack&lt;/a&gt;を訪ねてみてください。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;おわりに&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-2a00357080695c85&quot;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info&quot;&gt;JSer.info&lt;/a&gt;は開始から10年経ちました。&lt;br&gt;
JSer.infoがJavaScriptに関する&lt;a href=&quot;https://jser.info/about/&quot;&gt;少し整理した情報を提供することでより良い流れ&lt;/a&gt;を作れているなら幸いです。&lt;/p&gt;

&lt;p&gt;この記事では、JSer.infoの目的である&lt;a href=&quot;#JavaScript%E3%81%AB%E8%88%88%E5%91%B3%E3%81%8C%E3%81%82%E3%82%8B%E4%BA%BA%E3%81%AB%E3%82%82%E3%81%A3%E3%81%A8JavaScript%E3%82%92%E7%9F%A5%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%86&quot;&gt;JavaScriptに興味がある人にもっとJavaScriptを知ってもらう&lt;/a&gt;、&lt;a href=&quot;#JavaScript%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E6%AD%A3%E7%A2%BA%E3%81%AB%E4%BC%9D%E3%81%88%E3%82%8B&quot;&gt;JavaScriptの情報を整理して正確に伝える&lt;/a&gt;、&lt;a href=&quot;#%E6%9B%B4%E6%96%B0%E3%82%B3%E3%82%B9%E3%83%88%E3%82%92%E5%B0%8F%E3%81%95%E3%81%8F%E3%81%97%E3%81%A6%E7%B6%99%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E5%BD%A2%E3%82%92%E4%BD%9C%E3%82%8B&quot;&gt;更新コストを小さくして継続できる形を作る&lt;/a&gt;に対してどのように取り組んでいるかの現状を書きました。&lt;/p&gt;

&lt;p&gt;最近では、&lt;a href=&quot;https://join.slack.com/t/jserinfo/shared_invite/zt-g2shzp7o-f_tj6OaphCAFw5Qlt2Jw0A&quot;&gt;JSer.info slack&lt;/a&gt;や&lt;a href=&quot;https://github.com/sponsors/azu&quot;&gt;GitHub Sponsors&lt;/a&gt;を始めたりしています。&lt;/p&gt;

&lt;iframe src=&quot;https://github.com/sponsors/azu/card&quot; title=&quot;Sponsor azu&quot; height=&quot;180&quot; width=&quot;600&quot; style=&quot;border: 0;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;JSer.infoへの意見や感想などがあれば、次の場所に書いてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;jser_info&quot;&gt;この記事をTweetする&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/search?f=realtime&amp;q=%23jserinfo&quot;&gt;#jserinfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub Issue: &lt;a href=&quot;https://github.com/jser/jser.info/issues/115&quot;&gt;JSer.info 10th anniversary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;記事の&lt;a href=&quot;#js-disqus-embed&quot;&gt;コメント欄&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSer.infoは、「&lt;a href=&quot;#JavaScript%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E6%AD%A3%E7%A2%BA%E3%81%AB%E4%BC%9D%E3%81%88%E3%82%8B&quot;&gt;JavaScriptの情報を整理して正確に伝える&lt;/a&gt;」とあるようにどこからか発信された情報を伝える役割を持っています。&lt;br&gt;
次は、そのような情報を受け取った人が情報を発信する(発信側へとなる)ために何ができるかを考えていきたいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/uploads/media/2021/01/Technical-information-output.png&quot;&gt;&lt;img src=&quot;/uploads/media/2021/01/Technical-information-output.png&quot; alt=&quot;JSer.info?&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!-- https://excalidraw.com/#json=6139162356875264,_LFIjClOML3HIGsp1IU59Q --&gt;
</description>
        <pubDate>Sat, 16 Jan 2021 09:00:00 +0900</pubDate>
        <link>https://jser.info/2021/01/16/jser-10th/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/16/jser-10th/</guid>
        
        <category>JSer</category>
        
        
        <category>雑記</category>
        
      </item>
    
      <item>
        <title>2021-01-12のJS: Node.jsライブラリのESM対応の計画、TypeScriptとJSDocでJavaScriptの型チェック</title>
        <description>&lt;p&gt;JSer.info #522 - &lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;によるNode.jsライブラリのESM(ECMAScript Module)対応についてのdiscussionsが作られています。&lt;br&gt;
&lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;はさまざまNode.jsライブラリを作成しているため、Node.jsのESM対応に関係してきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/meta/discussions/15&quot;&gt;The ESM move · Discussion #15 · sindresorhus/meta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2021-04-30でNode.js 10のLTSが終了し、Node.js 12以上のみが対象となります。&lt;br&gt;
Node.js 12.xにはECMAScript modules(&lt;code&gt;.mjs&lt;/code&gt;や&lt;code&gt;&amp;quot;type&amp;quot;: &amp;quot;module&amp;quot;&lt;/code&gt;など)の対応が含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/esm.html&quot;&gt;Modules: ECMAScript modules | Node.js v15.5.1 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これによってNode.js(12以降)ではESMがネイティブで扱えるようになるため、既存のパッケージをESMに対応する計画について書かれています。&lt;/p&gt;

&lt;p&gt;Node.jsのESM対応はまだ開発中の部分や実際の移行のプラクティスが決まっていないため、&lt;br&gt;
どのように移行するかの参考になる情報が集められています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;によるライブラリは基本的にNode.js向けに作られているので、これらの対応が進むとNode.jsがネイティブにESMを扱える範囲が広がりそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sindresorhus.com/webpack-5-headache-b6ac24973bf1&quot;&gt;Webpack 5 Headache. Webpack no longer automatically… | by Sindre Sorhus | 🦄 Sindre Sorhus’ blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://whistlr.info/2021/check-js-with-ts/&quot;&gt;Check your JS with TS&lt;/a&gt;という記事では、TypeScriptとJSDocを使ってJavaScriptの型チェックを行う方法について書かれています。&lt;/p&gt;

&lt;p&gt;JSDocでの型の書き方、&lt;code&gt;tsc&lt;/code&gt;やVSCodeを使ったJSDocの型チェック、JavaScriptから&lt;code&gt;.d.ts&lt;/code&gt;の型定義ファイルを利用する方法についてなど書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-4-0-npm-cli&quot;&gt;Release v7.4.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.4.0&quot; title=&quot;Release v7.4.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.4.0リリース。&lt;br&gt;
&lt;code&gt;--foreground-scripts&lt;/code&gt;の追加、&lt;code&gt;npm publish --dry-run&lt;/code&gt;の修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-yaml-changelog-md-at-master-nodeca-js-yaml&quot;&gt;js-yaml/CHANGELOG.md at master · nodeca/js-yaml&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/blob/master/CHANGELOG.md#400---2021-01-03&quot; title=&quot;js-yaml/CHANGELOG.md at master · nodeca/js-yaml&quot;&gt;github.com/nodeca/js-yaml/blob/master/CHANGELOG.md#400---2021-01-03&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;js-yaml 4.0.0リリース。&lt;br&gt;
&lt;code&gt;safe{Load,LoadAll,Dump}&lt;/code&gt;などを&lt;code&gt;load&lt;/code&gt;/&lt;code&gt;loadAll&lt;/code&gt;/&lt;code&gt;dump&lt;/code&gt;にリネームしsafeメソッドをデフォルトに変更。&lt;br&gt;
unsafeな挙動は外部パッケージの&lt;code&gt;js-yaml-js-types&lt;/code&gt;に移動、numberのパースをYAML 1.2準拠に変更、&lt;code&gt;dump&lt;/code&gt;の出力を一部変更など。&lt;br&gt;
その他には&lt;code&gt;.mjs&lt;/code&gt;のサポート、prototype pollutionに関する挙動の修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/blob/master/migrate_v3_to_v4.md&quot; title=&quot;js-yaml/migrate\_v3\_to\_v4.md at master · nodeca/js-yaml&quot;&gt;js-yaml/migrate_v3_to_v4.md at master · nodeca/js-yaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml-js-types&quot; title=&quot;nodeca/js-yaml-js-types: Extra js types for js-yaml&quot;&gt;nodeca/js-yaml-js-types: Extra js types for js-yaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-esm-move-discussion-15-sindresorhus-meta&quot;&gt;The ESM move · Discussion #15 · sindresorhus/meta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/meta/discussions/15&quot; title=&quot;The ESM move · Discussion #15 · sindresorhus/meta&quot;&gt;github.com/sindresorhus/meta/discussions/15&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;sindresorhusパッケージの&lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;module&amp;quot;&lt;/code&gt;によるESMのネイティブ対応の計画についてのIssue&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;phodal-clean-frontend-clean-frontend-architecture&quot;&gt;phodal/clean-frontend: Clean Frontend Architecture：整洁前端架构&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/phodal/clean-frontend&quot; title=&quot;phodal/clean-frontend: Clean Frontend Architecture：整洁前端架构&quot;&gt;github.com/phodal/clean-frontend&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;architecture&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chinese&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドでのクリーンアーキテクチャについて。&lt;br&gt;
UIフレームワークにおけるロジックの偏り、クリーンアーキテクチャの概念的な解説や実装ガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;crossorigin&quot;&gt;crossorigin 属性の仕様を読み解く&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nhiroki.jp/2021/01/07/crossorigin-attribute&quot; title=&quot;crossorigin 属性の仕様を読み解く&quot;&gt;nhiroki.jp/2021/01/07/crossorigin-attribute&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CORSに関するrequest modeとcredentials modeの振る舞いを指定する&lt;code&gt;crossorigin&lt;/code&gt;属性について。&lt;br&gt;
&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;link rel=preconnect&amp;gt;&lt;/code&gt;における&lt;code&gt;crossorigin&lt;/code&gt;属性の指定による振る舞いの解説。&lt;br&gt;
Fetch APIでの表現方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;check-your-js-with-ts&quot;&gt;Check your JS with TS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://whistlr.info/2021/check-js-with-ts/&quot; title=&quot;Check your JS with TS&quot;&gt;whistlr.info/2021/check-js-with-ts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSDocとTypeScriptを使って、JavaScriptのコードを型チェックする方法について。&lt;br&gt;
tsconfig.jsonの設定、JSDocでの型定義、JavaScriptから&lt;code&gt;.d.ts&lt;/code&gt;ファイルをimportして型定義をJSDocに利用する方法など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;slowfil-es-demonstate-and-observe-slow-loading-resources&quot;&gt;Slowfil.es – Demonstate and observe slow-loading resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://slowfil.es/&quot; title=&quot;Slowfil.es – Demonstate and observe slow-loading resources&quot;&gt;slowfil.es/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;レイテンシを再現したリソースの配信をテストできるサービス。&lt;br&gt;
script要素の&lt;code&gt;async&lt;/code&gt;属性や&lt;code&gt;defer&lt;/code&gt;属性の動作のテストなどリソースのレイテンシに関するパフォーマンステストに利用できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.stefanjudis.com/notes/slowfil-es-a-service-for-slow-assets-with-high-priority/&quot; title=&quot;slowfil.es – a service for slow assets with high priority | Stefan Judis Web Development&quot;&gt;slowfil.es – a service for slow assets with high priority | Stefan Judis Web Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tr6aHw8I32M&quot; title=&quot;Oh The Scripts We&amp;amp;#x27;ll Load - A Performance Talk by Tim Kadlec - YouTube&quot;&gt;Oh The Scripts We&amp;#39;ll Load - A Performance Talk by Tim Kadlec - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-additional-non-backtracking-regexp-engine-v8&quot;&gt;An additional non-backtracking RegExp engine · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/non-backtracking-regexp&quot; title=&quot;An additional non-backtracking RegExp engine · V8&quot;&gt;v8.dev/blog/non-backtracking-regexp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;RegExp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8にバックトラックをしない正規表現エンジンをフラグ付きで実装したという話。&lt;br&gt;
バックトラックによってReDoSのような指数関数的にマッチする問題が知られていて、これを解決するためにバックトラックを使わないアルゴリズムの実装をしたという話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;byte-js-byte-a-easy-javascript-runtime-engine-that-aims-towards-productivity&quot;&gt;byte-js/byte: A easy JavaScript Runtime Engine that aims towards productivity&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/byte-js/byte&quot; title=&quot;byte-js/byte: A easy JavaScript Runtime Engine that aims towards productivity&quot;&gt;github.com/byte-js/byte&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;簡単なコマンドラインツールを作れることを目的にしたV8とRustを使ったJavaScriptのRuntime&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/rusty_v8&quot; title=&quot;denoland/rusty\_v8: V8 javascript bindings for Rust&quot;&gt;denoland/rusty_v8: V8 javascript bindings for Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nx-extensible-dev-tools-for-monorepos&quot;&gt;Nx: Extensible Dev Tools for Monorepos&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nx.dev/&quot; title=&quot;Nx: Extensible Dev Tools for Monorepos&quot;&gt;nx.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのmonorepoプロジェクトを扱う開発ツール。&lt;br&gt;
目的に合わせたmonorepoの作成、task runnerの管理、VSCode拡張を使ったUIをもつ。&lt;br&gt;
依存グラフを使ったキャッシュ、インクリメンタルビルド、Nx Cloudを使ったリモートキャッシュなどを行う&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checka11y-css-css-stylesheet-to-quickly-highlight-a11y-concerns&quot;&gt;Checka11y.css - CSS stylesheet to quickly highlight a11y concerns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://checka11y.jackdomleo.dev/&quot; title=&quot;Checka11y.css - CSS stylesheet to quickly highlight a11y concerns&quot;&gt;checka11y.jackdomleo.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSでHTMLのアクセシビリティをチェックするスタイルシート。&lt;br&gt;
類似するツールとして&lt;a href=&quot;https://ffoodd.github.io/a11y.css/&quot;&gt;https://ffoodd.github.io/a11y.css/&lt;/a&gt; がある。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudfour-lighthouse-parade-a-node-js-command-line-tool-that-crawls-a-domain-and-gathers-lighthouse-performance-data-for-every-page&quot;&gt;cloudfour/lighthouse-parade: A Node.js command line tool that crawls a domain and gathers lighthouse performance data for every page.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cloudfour/lighthouse-parade&quot; title=&quot;cloudfour/lighthouse-parade: A Node.js command line tool that crawls a domain and gathers lighthouse performance data for every page.&quot;&gt;github.com/cloudfour/lighthouse-parade&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouseでクロールしてパフォーマンス計測した結果をCSVとしてまとめるツール。&lt;br&gt;
複数のページの結果をSpreadsheetなどに集めて分析する目的&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;menduz-typed-url-params-typesystem-based-parser-for-url-parameters&quot;&gt;menduz/typed-url-params: TypeSystem based parser for url parameters&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/menduz/typed-url-params&quot; title=&quot;menduz/typed-url-params: TypeSystem based parser for url parameters&quot;&gt;github.com/menduz/typed-url-params&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;path-to-regexpのようなルーティング文字列に対する型推論をTemplate Literarl Typeで行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mistlog-react-peg-a-react-style-parser-generator-based-on-peg-js&quot;&gt;mistlog/react-peg: A react style parser generator based on PEG.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mistlog/react-peg&quot; title=&quot;mistlog/react-peg: A react style parser generator based on PEG.js&quot;&gt;github.com/mistlog/react-peg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PEG.jsの構文定義をJSXで書けるライブラリ。&lt;br&gt;
TypeScriptのTSXを使うことで、構文に対する型チェックをしながら、構文定義をコンポーネントのように書けるようにすることが目的。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 12 Jan 2021 11:03:31 +0900</pubDate>
        <link>https://jser.info/2021/01/12/node.jsesm-typescriptjsdocjavascript/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/12/node.jsesm-typescriptjsdocjavascript/</guid>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>V8</category>
        
        <category>performance</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-07のJS: Wasmer 1.0、2021年のウェブ標準とブラウザ、xstyled</title>
        <description>&lt;p&gt;JSer.info #521 - WebAssemblyのランタイムである&lt;a href=&quot;https://wasmer.io/&quot;&gt;Wasmer&lt;/a&gt; 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/wasmer/wasmer-1-0-3f86ca18c043&quot;&gt;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wasmerio/wasmer/blob/master/CHANGELOG.md#100---2021-01-05&quot; title=&quot;wasmer/CHANGELOG.md at master · wasmerio/wasmer&quot;&gt;wasmer/CHANGELOG.md at master · wasmerio/wasmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wasmer 1.0では、Wasmファイルを&lt;code&gt;.dll&lt;/code&gt;などにプリコンパイルする&lt;code&gt;wasmer compile&lt;/code&gt;の追加、クロスコンパイルの対応、エラーレポートの改善などが含まれています。&lt;/p&gt;

&lt;p&gt;1.0ではAOT (Ahead Of Time) compilation(&lt;code&gt;wasmer compile&lt;/code&gt;によるprecompile)などをサポートしたことでproduction readyとなったと書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;次の記事では、2020年におけるウェブ標準の動きと今後の動きについて書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&quot;&gt;2021年のウェブ標準とブラウザ：新春特別企画｜gihyo.jp … 技術評論社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&quot;&gt;2021年のWebアクセシビリティ：新春特別企画｜gihyo.jp … 技術評論社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2020年におけるHTML、CSS、DOM APIに関するウェブ標準やブラウザの対応などについて書かれています。&lt;br&gt;
また、WebアクセシビリティについてではWCAG 2.2と次の標準であるWCAG 3.0の策定状況について書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React向けのUtility-firstなCSS-in-JSフレームワークである&lt;a href=&quot;https://xstyled.dev/&quot;&gt;xstyled&lt;/a&gt; 2.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gregberge/xstyled/releases/tag/v2.0.0&quot;&gt;Release 🚀 v2.0.0 · gregberge/xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://xstyled.dev/&quot;&gt;xstyled&lt;/a&gt;は&lt;a href=&quot;https://styled-system.com/&quot;&gt;Styled System&lt;/a&gt;と&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;をインスパイアして作成されたCSS-in-JSフレームワークです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xstyled.dev/docs/introduction/&quot;&gt;Introduction - xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内部的なCSS-in-JSライブラリとしてstyled-componentsまたはemotionを使い、TailwindのようなUtilityスタイルを指定できるReactコンポーネントを提供する目的のようです。&lt;br&gt;
2.0では1.xからAPIの変更などが含まれていますが、TypeScriptの型定義が追加されドキュメントサイトが刷新されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wasmer-1-0-by-leveraging-wasm-for-software-by-syrus-akbary-wasmer-jan-2021-medium&quot;&gt;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/wasmer/wasmer-1-0-3f86ca18c043&quot; title=&quot;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&quot;&gt;medium.com/wasmer/wasmer-1-0-3f86ca18c043&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssembly RuntimeであるWasmer 1.0リリース。&lt;br&gt;
Wasmファイルを&lt;code&gt;.dll&lt;/code&gt;などにプリコンパイルする&lt;code&gt;wasmer compile&lt;/code&gt;の追加、クロスコンパイルの対応、エラーレポートの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wasmerio/wasmer/blob/master/CHANGELOG.md#100---2021-01-05&quot; title=&quot;wasmer/CHANGELOG.md at master · wasmerio/wasmer&quot;&gt;wasmer/CHANGELOG.md at master · wasmerio/wasmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-5-1-current-node-js&quot;&gt;Node v15.5.1 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.5.1/&quot; title=&quot;Node v15.5.1 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.5.1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.5.1リリース。&lt;br&gt;
DoSにつながる脆弱性とHTTP Request Smugglingの脆弱性の修正を含むセキュリティアップデート。&lt;br&gt;
Node.js 10, 12, 14にそれぞれ同様のセキュリティリリースがされている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-118-webkit&quot;&gt;Release Notes for Safari Technology Preview 118 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11439/release-notes-for-safari-technology-preview-118/&quot; title=&quot;Release Notes for Safari Technology Preview 118 | WebKit&quot;&gt;webkit.org/blog/11439/release-notes-for-safari-technology-preview-118/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 118リリース。&lt;br&gt;
Web InspectorにNetworkリクエストのinterceptをするUIの追加。&lt;br&gt;
ECMAScript Proposalの&lt;code&gt;Array#at&lt;/code&gt;をサポート、Private Click Measurementの設定をexperimentalから標準UIに移動など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-relative-indexing-method&quot; title=&quot;tc39/proposal-relative-indexing-method: A TC39 proposal to add an .at() method to all the basic indexable classes (Array, String, TypedArray)&quot;&gt;tc39/proposal-relative-indexing-method: A TC39 proposal to add an .at() method to all the basic indexable classes (Array, String, TypedArray)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-1&quot;&gt;Reactチュートリアル1：犬画像ギャラリーを作ろう&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/likr/articles/6be53ca64f29aa035f07&quot; title=&quot;Reactチュートリアル1：犬画像ギャラリーを作ろう&quot;&gt;zenn.dev/likr/articles/6be53ca64f29aa035f07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったウェブアプリケーションの開発チュートリアル。&lt;br&gt;
Reactの基本的な使い方、コンポーネント、Netlifyを使った公開方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2021-gihyo-jp&quot;&gt;2021年のウェブ標準とブラウザ：新春特別企画｜gihyo.jp … 技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&quot; title=&quot;2021年のウェブ標準とブラウザ：新春特別企画｜gihyo.jp … 技術評論社&quot;&gt;gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2020年におけるHTML、CSS、DOM APIに変化についてまとめた記事。&lt;br&gt;
また、IE 11と旧Edgeのサポート状況、UA Client HintやPrivacy Sandboxなどの取り組みについてなど幅広くウェブ(標準)の状況について扱っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2021-web-gihyo-jp&quot;&gt;2021年のWebアクセシビリティ：新春特別企画｜gihyo.jp … 技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&quot; title=&quot;2021年のWebアクセシビリティ：新春特別企画｜gihyo.jp … 技術評論社&quot;&gt;gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブアクセシビリティの仕様のステータスについての記事。&lt;br&gt;
2020年のWCAGの変更点、WCAGのデジュール標準としてのISO/JIS版のステータス。&lt;br&gt;
策定作業中のWCAG 3.0、WAI-ARIA 1.2についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-npm&quot;&gt;Denoからnpmパッケージを使用するノウハウ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/uki00a/articles/how-to-use-npm-packages-in-deno&quot; title=&quot;Denoからnpmパッケージを使用するノウハウ&quot;&gt;zenn.dev/uki00a/articles/how-to-use-npm-packages-in-deno&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Denoからnpmに公開されたパッケージを利用する方法について。&lt;br&gt;
skypack、esm.sh、jspm.devを使った方法について。&lt;br&gt;
また、JavaScriptで書かれたパッケージを型チェックする仕組みとしての&lt;code&gt;X-TypeScript-Types&lt;/code&gt;ヘッダと&lt;code&gt;@deno-types&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vanilla-hooks-outside-react-hooks-are-a-pattern-not-something-by-andrea-giammarchi-javascript-in-plain-english-jan-2021-medium&quot;&gt;Vanilla Hooks (outside React). Hooks are a pattern, not something… | by Andrea Giammarchi | JavaScript In Plain English | Jan, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-in-plain-english/vanilla-hooks-outside-react-860471e5f95c&quot; title=&quot;Vanilla Hooks (outside React). Hooks are a pattern, not something… | by Andrea Giammarchi | JavaScript In Plain English | Jan, 2021 | Medium&quot;&gt;medium.com/javascript-in-plain-english/vanilla-hooks-outside-react-860471e5f95c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;uhooksを使ってReact HooksライクにDOM APIを使ったTODOアプリを書く話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/uhooks&quot; title=&quot;WebReflection/uhooks: micro hooks: a minimalistic client/server hooks&amp;amp;#x27; implementation&quot;&gt;WebReflection/uhooks: micro hooks: a minimalistic client/server hooks&amp;#39; implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tabfs&quot;&gt;TabFS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://omar.website/tabfs/&quot; title=&quot;TabFS&quot;&gt;omar.website/tabfs/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebExtension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのタブをファイルシステムとしてマウントするブラウザ拡張&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;g-plane-typed-query-selector-better-typed-queryselector-and-queryselectorall&quot;&gt;g-plane/typed-query-selector: Better typed `querySelector` and `querySelectorAll`.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/g-plane/typed-query-selector&quot; title=&quot;g-plane/typed-query-selector: Better typed \`querySelector\` and \`querySelectorAll\`.&quot;&gt;github.com/g-plane/typed-query-selector&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Template Literal Typeを使って&lt;code&gt;document.querySelector&lt;/code&gt;の引数から返す要素の型を推論するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xstyled-a-utility-first-css-in-js-framework-built-for-react-xstyled&quot;&gt;xstyled - A utility-first CSS-in-JS framework built for React. - xstyled&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://xstyled.dev/&quot; title=&quot;xstyled - A utility-first CSS-in-JS framework built for React. - xstyled&quot;&gt;xstyled.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React向けのUtility-firstなCSS-in-JSフレームワーク。&lt;br&gt;
CSS-in-JSライブラリとしてstyled-componentsまたはemotionを使い、TailwindのようなUtilityスタイルを指定できるコンポーネントを提供する目的。&lt;br&gt;
styled-systemをインスパイアしている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://styled-system.com/&quot; title=&quot;Styled System&quot;&gt;Styled System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gregberge/xstyled/releases/tag/v2.0.0&quot; title=&quot;Release 🚀 v2.0.0 · gregberge/xstyled&quot;&gt;Release 🚀 v2.0.0 · gregberge/xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nullstack-full-stack-javascript-components&quot;&gt;Nullstack - Full-stack Javascript Components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nullstack.app/&quot; title=&quot;Nullstack - Full-stack Javascript Components&quot;&gt;nullstack.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;同じコンポーネントでブラウザとNode.jsで動くコードを扱うフルスタックフレームワーク。&lt;br&gt;
&lt;code&gt;.njs&lt;/code&gt;という拡張子でライフサイクルメソッドとJSXを使ったコンポーネントを書くことで、SSRやHydrateなどを行う。&lt;br&gt;
サーバで動くコードは&lt;code&gt;static async&lt;/code&gt;で書き、インスタントメソッドはブラウザ向けの処理となり、&lt;code&gt;context&lt;/code&gt;オブジェクトで値をやり取りする。&lt;br&gt;
ビルドするとブラウザとサーバのコードをそれぞれbundleしたファイルを出力する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kripod-otion-atomic-css-in-js-with-a-featherweight-runtime&quot;&gt;kripod/otion: Atomic CSS-in-JS with a featherweight runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kripod/otion&quot; title=&quot;kripod/otion: Atomic CSS-in-JS with a featherweight runtime&quot;&gt;github.com/kripod/otion&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;runtimeでのatomic CSS-in-JSの実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;atlassian-labs-compiled-build-time-atomic-css-in-js-baked-and-ready-to-serve&quot;&gt;atlassian-labs/compiled: Build time atomic CSS-in-JS. Baked and ready to serve.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/atlassian-labs/compiled&quot; title=&quot;atlassian-labs/compiled: Build time atomic CSS-in-JS. Baked and ready to serve.&quot;&gt;github.com/atlassian-labs/compiled&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;build timeでのAtomic CSS-in-JSの実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yord-shargs-shargs-is-a-library-for-building-command-line-argument-parsers&quot;&gt;Yord/shargs: 🦈 shargs is a library for building command-line argument parsers.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Yord/shargs&quot; title=&quot;Yord/shargs: 🦈 shargs is a library for building command-line argument parsers.&quot;&gt;github.com/Yord/shargs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コマンドライン引数パーサライブラリ。&lt;br&gt;
サブコマンド、スペルミスの訂正、REPLなどに対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;o1dmate-dns-host-simple-lightweight-dns-server-written-in-pure-javascript-with-no-external-dependencies&quot;&gt;O1dMate/dns-host: Simple, lightweight DNS server written in pure JavaScript with no external dependencies.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/O1dMate/dns-host&quot; title=&quot;O1dMate/dns-host: Simple, lightweight DNS server written in pure JavaScript with no external dependencies.&quot;&gt;github.com/O1dMate/dns-host&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;dgram&lt;/code&gt;コアパッケージを使ったDNSサーバの実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon-co-jp-web-http-cdn&quot;&gt;Amazon.co.jp: Web配信の技術―HTTPキャッシュ・リバースプロキシ・CDNを活用する: 田中 祥平: 本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4297119250/&quot; title=&quot;Amazon.co.jp: Web配信の技術―HTTPキャッシュ・リバースプロキシ・CDNを活用する: 田中 祥平: 本&quot;&gt;www.amazon.co.jp/dp/4297119250/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年2月13日 発売&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 07 Jan 2021 12:27:36 +0900</pubDate>
        <link>https://jser.info/2021/01/07/wasmer-1.0-2021-xstyled/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/07/wasmer-1.0-2021-xstyled/</guid>
        
        <category>CSS</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-12-29のJS: CSS Snapshot 2020、100万のサイトをクロールした調査結果、FlowからTypeScriptへの移行</title>
        <description>&lt;p&gt;JSer.info #520 - CSSの各仕様の現在のステータスを一覧する目的であるCSS Snapshot 2020が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/CSS/2020/12/23/css-snapshot-2020-published/&quot;&gt;CSS WG Blog – CSS Snapshot 2020 Published&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/2020/NOTE-css-2020-20201222/&quot;&gt;CSS Snapshot 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://momdo.github.io/css-2020/&quot;&gt;CSS Snapshot 2020 日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mitsue.co.jp/knowledge/blog/frontend/202012/23_1049.html&quot;&gt;CSS Snapshot 2020が発行されました | フロントエンドBlog | ミツエーリンクス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;スナップショットとしてCSSモジュール(ここではCSSの各仕様のこと)のステータスとサマリがまとまとめられています。&lt;br&gt;
CSSの仕様の全体像が分かりやすいので、興味がある人は見てみると良いかもしれません。&lt;/p&gt;

&lt;p&gt;また、最新のステータスは&lt;a href=&quot;https://www.w3.org/Style/CSS/current-work&quot;&gt;CSS current work &amp;amp; how to participate&lt;/a&gt;で確認できます。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://catchjs.com/Blog/PerformanceInTheWild&quot;&gt;JavaScript Performance in the Wild 2020 | CatchJS&lt;/a&gt;という記事では、&lt;a href=&quot;https://tranco-list.eu/&quot;&gt;Tranco&lt;/a&gt;のデータを元にした100万サイトをPuppeteerでクロールした調査結果についてまとめられています。&lt;/p&gt;

&lt;p&gt;どのような要因がウェブサイトのパフォーマンスに影響を与えているかを調査するために集めたデータとなっていて、ライブラリとメトリクスへの影響などについて書かれています。&lt;br&gt;
集められたデータはKaggleで公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/indexhtml/web-performance-metrics&quot;&gt;Web Performance Metrics | Kaggle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、類似するデータは&lt;a href=&quot;https://httparchive.org/&quot;&gt;HTTP Archive&lt;/a&gt;でも公開されているので興味がある人は調べてみると良いかもしれません。&lt;/p&gt;

&lt;p&gt;CatchJSの記事では、同様の調査からウェブサイトのエラーについて書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://catchjs.com/Blog/ErrorsInTheWild&quot;&gt;JavaScript Errors in the Wild 2020 | CatchJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://react.christmas/2020/2&quot;&gt;War stories: The move from Flow to TypeScript&lt;/a&gt;という記事ではFlowからTypeScriptへの移行について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/devbridge/js-unused-exports&quot;&gt;js-unused-exports&lt;/a&gt;をベースにした使われてないファイルの削除、&lt;a href=&quot;https://github.com/Khan/flow-to-ts&quot;&gt;flow-to-ts&lt;/a&gt;を使った変換、ESLintを使ったフォーマットの修正といったどのようにコードを移行していったかについて書かれています。&lt;br&gt;
また移行期間中のコードのフリーズした話やマイグレーションの目標設定と目標の計測についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-volta-1-0-0-volta&quot;&gt;Announcing Volta 1.0.0 | Volta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.volta.sh/2020/12/21/announcing-volta-100/&quot; title=&quot;Announcing Volta 1.0.0 | Volta&quot;&gt;blog.volta.sh/2020/12/21/announcing-volta-100/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nodeやnpmのバージョン管理ツールであるVolta 1.0.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-5-0-current-node-js&quot;&gt;Node v15.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.5.0/&quot; title=&quot;Node v15.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.5.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v15.5.0リリース。&lt;br&gt;
&lt;code&gt;child_process&lt;/code&gt;と&lt;code&gt;stream&lt;/code&gt;がAbortSignalをサポート、&lt;code&gt;querystring.stringify()&lt;/code&gt;がBigIntをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4-0-0-fuse-box-fuse-box&quot;&gt;Release 4.0.0 · fuse-box/fuse-box&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fuse-box/fuse-box/releases/tag/v4.0.0&quot; title=&quot;Release 4.0.0 · fuse-box/fuse-box&quot;&gt;github.com/fuse-box/fuse-box/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FuseBox 4.0リリース。&lt;br&gt;
破壊的な変更として&lt;code&gt;homeDir&lt;/code&gt;、&lt;code&gt;output&lt;/code&gt;、&lt;code&gt;useSigleBundle&lt;/code&gt;の削除。&lt;br&gt;
&lt;code&gt;watch&lt;/code&gt;オプションを&lt;code&gt;watcher&lt;/code&gt;にリネーム、&lt;br&gt;
&lt;code&gt;output&lt;/code&gt;オプションの代わりに&lt;code&gt;bundles.distRoot&lt;/code&gt;を使うように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fuse-box.org/docs/development/changelog-fuse-compiler&quot; title=&quot;Changelog fuse 3 to 4 · FuseBox&quot;&gt;Changelog fuse 3 to 4 · FuseBox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-snapshot-2020&quot;&gt;CSS Snapshot 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/2020/NOTE-css-2020-20201222/&quot; title=&quot;CSS Snapshot 2020&quot;&gt;www.w3.org/TR/2020/NOTE-css-2020-20201222/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Snapshot 2020リリース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://momdo.github.io/css-2020/&quot; title=&quot;CSS Snapshot 2020 日本語訳&quot;&gt;CSS Snapshot 2020 日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mitsue.co.jp/knowledge/blog/frontend/202012/23_1049.html&quot; title=&quot;CSS Snapshot 2020が発行されました | フロントエンドBlog | ミツエーリンクス&quot;&gt;CSS Snapshot 2020が発行されました | フロントエンドBlog | ミツエーリンクス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/8820&quot; title=&quot;Working Group Note: CSS Snapshot 2020 | W3C News&quot;&gt;Working Group Note: CSS Snapshot 2020 | W3C News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cross-env-is-finished-now-in-maintenance-mode-issue-257-kentcdodds-cross-env&quot;&gt;cross-env is &amp;quot;finished&amp;quot; (now in maintenance mode) · Issue #257 · kentcdodds/cross-env&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kentcdodds/cross-env/issues/257&quot; title=&quot;cross-env is \&amp;quot;finished\&amp;quot; (now in maintenance mode) · Issue #257 · kentcdodds/cross-env&quot;&gt;github.com/kentcdodds/cross-env/issues/257&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;cross-envがメンテナンスモードとなりアーカイブされた。&lt;br&gt;
機能として完成していて、これ以上機能追加することはないため。セキュリティアップデートと新しいNode.jsへの対応は続けるメンテナンスモードとなった&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-containment-hack-the-nikkei&quot;&gt;CSS Containment によるパフォーマンス改善 — HACK The Nikkei&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hack.nikkei.com/blog/advent20201219/&quot; title=&quot;CSS Containment によるパフォーマンス改善 — HACK The Nikkei&quot;&gt;hack.nikkei.com/blog/advent20201219/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Containmentの&lt;code&gt;contain: content&lt;/code&gt;によるPaint Timeの改善について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-performance-calendar-strategies-for-telemetry-exfiltration-aka-beaconing-in-practice&quot;&gt;Web Performance Calendar » Strategies for Telemetry Exfiltration (aka Beaconing In Practice)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2020/beaconing-in-practice/&quot; title=&quot;Web Performance Calendar » Strategies for Telemetry Exfiltration (aka Beaconing In Practice)&quot;&gt;calendar.perfplanet.com/2020/beaconing-in-practice/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザからメトリクスデータを送信するときの戦略について。&lt;br&gt;
&lt;code&gt;navigator.sendBeacon&lt;/code&gt;/Fetch/XHR/pixel imageでの送信、どのタイミングで送信するかのライフサイクルイベントの到達信頼性についての調査。&lt;br&gt;
ローカルストレージでの再送やService Workerでのバッファ、Reporting APIについてなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maximally-optimizing-image-loading-for-the-web-in-2021&quot;&gt;Maximally optimizing image loading for the web in 2021&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.industrialempathy.com/posts/image-optimizations/&quot; title=&quot;Maximally optimizing image loading for the web in 2021&quot;&gt;www.industrialempathy.com/posts/image-optimizations/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;画像の読み込みの最適化についてまとめた記事。&lt;br&gt;
widthとheightでのCLSの回避、&lt;code&gt;content-visibility&lt;/code&gt;、AVIF、&lt;code&gt;srcset&lt;/code&gt;と&lt;code&gt;size&lt;/code&gt;属性、Cache-Controlヘッダ、&lt;code&gt;loading&lt;/code&gt;属性と&lt;code&gt;decoding&lt;/code&gt;属性。&lt;br&gt;
プレースホルダー画像を使う方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;war-stories-the-move-from-flow-to-typescript&quot;&gt;War stories: The move from Flow to TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://react.christmas/2020/2&quot; title=&quot;War stories: The move from Flow to TypeScript&quot;&gt;react.christmas/2020/2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;約15日でFlowからTypeScriptのマイグレーションした話。&lt;br&gt;
js-unused-exportsを使った使われてないファイルの削除、flow-to-tsを使った変換、ESLintを使ったフォーマットの修正。&lt;br&gt;
コードのフリーズとマイグレーションの目標について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-performance-in-the-wild-2020-catchjs&quot;&gt;JavaScript Performance in the Wild 2020 | CatchJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://catchjs.com/Blog/PerformanceInTheWild&quot; title=&quot;JavaScript Performance in the Wild 2020 | CatchJS&quot;&gt;catchjs.com/Blog/PerformanceInTheWild&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tranco-list.eu/&quot;&gt;https://tranco-list.eu/&lt;/a&gt; のデータを元にサイトをPuppeteerでクロールして集めたパフォーマンスに関するデータセットについて。&lt;br&gt;
Kaggleでデータセットを公開している。&lt;br&gt;
HTTPのプロトコルバージョン、サードパーティリソース、ライブラリとそれぞれのメトリクスの関係性などについて。&lt;br&gt;
2.2%のサイトでjQueryのロードをしていないためにエラーが発生していることなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;msn0-mdn-polyfills-mdn-polyfills-from-foreach-filter-find-findindex-assign-includes-create-entries-of-repeat-startswith-endswith-toggleattribute-bind-mouseevent-customevent-padend-padstart&quot;&gt;msn0/mdn-polyfills: MDN polyfills - from, forEach, filter, find, findIndex, assign, includes, create, entries, of, repeat, startsWith, endsWith, toggleAttribute, bind, MouseEvent, CustomEvent, padEnd, padStart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/msn0/mdn-polyfills&quot; title=&quot;msn0/mdn-polyfills: MDN polyfills - from, forEach, filter, find, findIndex, assign, includes, create, entries, of, repeat, startsWith, endsWith, toggleAttribute, bind, MouseEvent, CustomEvent, padEnd, padStart&quot;&gt;github.com/msn0/mdn-polyfills&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNに載っているJavaScriptやDOM APIのpolyfillをまとめたパッケージ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdocs-io&quot;&gt;jsDocs.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jsdocs.io/&quot; title=&quot;jsDocs.io&quot;&gt;www.jsdocs.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージに含まれるTypeScriptの型定義ファイルをベースに自動的にドキュメントを生成して表示できるサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jameslittle230-stork-impossibly-fast-web-search-made-for-static-sites&quot;&gt;jameslittle230/stork: 🔎 Impossibly fast web search, made for static sites.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jameslittle230/stork&quot; title=&quot;jameslittle230/stork: 🔎 Impossibly fast web search, made for static sites.&quot;&gt;github.com/jameslittle230/stork&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustで書かれたindexerとWebAssemblyを使った検索ライブラリ。&lt;br&gt;
検索対象のファイルからインデックスファイルを作り、それを元にした検索機能/UIを提供するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devbridge-js-unused-exports&quot;&gt;devbridge/js-unused-exports&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/devbridge/js-unused-exports&quot; title=&quot;devbridge/js-unused-exports&quot;&gt;github.com/devbridge/js-unused-exports&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのファイルから使われてない関数、ファイルを抽出するツール。&lt;br&gt;
細かい無視オプションやaliasの対応などのオプションをもっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-web&quot;&gt;Webブラウザセキュリティ ― Webアプリケーションの安全性を支える仕組みを整理する – 技術書出版と販売のラムダノート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.lambdanote.com/collections/frontpage/products/wbs&quot; title=&quot;Webブラウザセキュリティ ― Webアプリケーションの安全性を支える仕組みを整理する – 技術書出版と販売のラムダノート&quot;&gt;www.lambdanote.com/collections/frontpage/products/wbs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年1月5日 発売&lt;br&gt;
ウェブセキュリティについての書籍。&lt;br&gt;
SOP、CORS、CSPなどのOriginを境界にしたセキュリティ機構、ブラウザのプロセス分離モデル、Cookieについてなど&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 29 Dec 2020 12:05:18 +0900</pubDate>
        <link>https://jser.info/2020/12/29/css-snapshot-2020-100-flowtypescript/</link>
        <guid isPermaLink="true">https://jser.info/2020/12/29/css-snapshot-2020-100-flowtypescript/</guid>
        
        <category>browser</category>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>performance</category>
        
        <category>Rust</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-12-22のJS:  lighthouse 7.0.0、React Server Components、Micro Frontends Architecture Patterns</title>
        <description>&lt;p&gt;JSer.info #519 - Lighthouse 7.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.0.0&quot;&gt;Release v7.0.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 10のサポート終了、PWAカテゴリの変更、アクセシビリティのテストに使う&lt;code&gt;axe-core&lt;/code&gt;のアップデート、nightlyを&lt;code&gt;lighthouse@next&lt;/code&gt;としてインストールできるようになるといった変更が含まれています。&lt;br&gt;
また、スクリーンショットがフルページとなりレポートのファイルサイズが増加しています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ReactからReact Server Componentsと呼ばれる実験的な実装とRFCが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html&quot;&gt;Introducing Zero-Bundle-Size React Server Components – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/rfcs/pull/188&quot;&gt;RFC: React Server Components by josephsavona · Pull Request #188 · reactjs/rfcs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React Server Componentsは、サーバサイドでReact Componentをレンダリングする仕組みですが、レンダリング結果はHTMLではなくJSONライクなデータ(SlotとコンポーネントのJSON表現を組み合わせた形式)です。&lt;/p&gt;

&lt;p&gt;リクエストごとにサーバコンポーネントをレンダリングした結果をJSON(クライアント描画するコンポーネントを含む)のレスポンスとして返し、クライアントではそのレスポンス結果を使いレンダリングできる仕組みとなっています。&lt;br&gt;
大まかにいえば、コンポーネントレベルでのSSRとHydrateを行える仕組みです。&lt;/p&gt;

&lt;p&gt;サーバサイドでコンポーネントをレンダリングすることで、サーバでのレンダリング結果のみを扱うクライアントでは不要なライブラリを含めずに扱えます。&lt;br&gt;
そのため、クライアントに必要なbundleサイズを減らせるのが主な目的となっています。&lt;br&gt;
Facebookのproductionでテストした結果、bundleサイズが最大30%削減できているそうです。&lt;/p&gt;

&lt;p&gt;詳しくは、次の動画とデモアプリで解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=TQQPAU21ZUw&amp;feature=emb_title&quot;&gt;Data Fetching with React Server Components - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/server-components-demo&quot;&gt;reactjs/server-components-demo: Demo app of React Server Components.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在はまだRFCが出たばかりの実験的な段階であるため、来年にもっと詳細を決めていくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/okmttdhr/books/8c977618755cb68ad2c0&quot;&gt;Micro Frontends Architecture Patterns&lt;/a&gt;という電子書籍では、 フロントエンドで見かけるアーキテクチャについて色々とまとめられています。&lt;br&gt;
まだ決まりきったパターンがないMicro Frontendsについても色々なパターンについて紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-googlechrome-lighthouse&quot;&gt;Release v7.0.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 7.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了。&lt;br&gt;
PWAカテゴリの変更、アクセシビリティのテストに使う&lt;code&gt;axe-core&lt;/code&gt;のアップデート、nightlyを&lt;code&gt;lighthouse@next&lt;/code&gt;としてインストールできるようになる。&lt;br&gt;
また、スクリーンショットがフルページとなりレポートのファイルサイズが増加するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-less-less-js&quot;&gt;Release v4.0.0 · less/less.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/less/less.js/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · less/less.js&quot;&gt;github.com/less/less.js/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Less 4.0.0リリース。&lt;br&gt;
破壊的な変更としてmixinの呼び出し方のチェックをより厳密に変更、&lt;code&gt;math&lt;/code&gt;オプションの初期値を&lt;code&gt;parens-division&lt;/code&gt;に変更など。&lt;br&gt;
&lt;code&gt;min()&lt;/code&gt;/&lt;code&gt;max()&lt;/code&gt;のサポート改善、&lt;code&gt;isdefined()&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-stimulus-2-0-announcements-stimulus-discourse&quot;&gt;Announcing Stimulus 2.0 - Announcements - Stimulus Discourse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://discourse.stimulusjs.org/t/announcing-stimulus-2-0/1482&quot; title=&quot;Announcing Stimulus 2.0 - Announcements - Stimulus Discourse&quot;&gt;discourse.stimulusjs.org/t/announcing-stimulus-2-0/1482&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Basecampで使われているStimulus 2.0リリース。&lt;br&gt;
Controllerで&lt;code&gt;values&lt;/code&gt;と&lt;code&gt;classes&lt;/code&gt;プロパティを追加、EventListnerの&lt;code&gt;once&lt;/code&gt;と&lt;code&gt;passive&lt;/code&gt;のサポートなど。&lt;br&gt;
&lt;code&gt;data&lt;/code&gt;属性に&lt;code&gt;identifier&lt;/code&gt;を含めて使うように変更、&lt;code&gt;input&lt;/code&gt;要素を&lt;code&gt;change&lt;/code&gt;から&lt;code&gt;input&lt;/code&gt;イベントで監視するように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stimulusjs/stimulus/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · stimulusjs/stimulus&quot;&gt;Release v2.0.0 · stimulusjs/stimulus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-fb55-htmlparser2&quot;&gt;Release v6.0.0 · fb55/htmlparser2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fb55/htmlparser2/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · fb55/htmlparser2&quot;&gt;github.com/fb55/htmlparser2/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;htmlparser2 6.0.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-13-0-developit-microbundle&quot;&gt;Release v0.13.0 · developit/microbundle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/microbundle/releases/tag/v0.13.0&quot; title=&quot;Release v0.13.0 · developit/microbundle&quot;&gt;github.com/developit/microbundle/releases/tag/v0.13.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ライブラリを配布用にbundleするmicrobundle 0.13.0リリース。&lt;br&gt;
&lt;code&gt;--css&lt;/code&gt;フラグを追加し、CSSをデフォルトでは外部ファイル(&lt;code&gt;external&lt;/code&gt;)として出力し、&lt;code&gt;inline&lt;/code&gt;でインライン化できるように。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-zero-bundle-size-react-server-components-react-blog&quot;&gt;Introducing Zero-Bundle-Size React Server Components – React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html&quot; title=&quot;Introducing Zero-Bundle-Size React Server Components – React Blog&quot;&gt;reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactで試験的に実装されたReact Server Componentsについて。&lt;br&gt;
リクエストごとにサーバコンポーネントをレンダリングした結果をJSONライクなデータ(SlotとコンポーネントのJSON表現を組み合わせた形式)として返し、クライアントではレンダリング結果を使いレンダリングできる仕組み。&lt;br&gt;
サーバサイドでコンポーネントをレンダリングすることで、レンダリング結果のみを扱うクライアントでは不要なライブラリを含めずに扱えるためサイズを減らせる。&lt;br&gt;
コンポーネントレベルでのSSRとHydrateを行える仕組み。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/rfcs/pull/188&quot; title=&quot;RFC: React Server Components by josephsavona · Pull Request #188 · reactjs/rfcs&quot;&gt;RFC: React Server Components by josephsavona · Pull Request #188 · reactjs/rfcs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=TQQPAU21ZUw&amp;feature=emb_title&quot; title=&quot;Data Fetching with React Server Components - YouTube&quot;&gt;Data Fetching with React Server Components - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;conditional-javascript-javascript-dev-tips&quot;&gt;Conditional JavaScript - JavaScript - Dev Tips&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://umaar.com/dev-tips/242-considerate-javascript/&quot; title=&quot;Conditional JavaScript - JavaScript - Dev Tips&quot;&gt;umaar.com/dev-tips/242-considerate-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;選択的にモジュールをダウンロードする際に利用できるウェブAPIとブラウザのサポートについて。&lt;br&gt;
メモリ、CPU数、バッテリー、ストレージの空き容量、ネットワーク、saveDataなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moiva-io-measure-and-compare-javascript-libraries&quot;&gt;Moiva.io - Measure and compare JavaScript libraries&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moiva.io/&quot; title=&quot;Moiva.io - Measure and compare JavaScript libraries&quot;&gt;moiva.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージの同士を比較できるツール。&lt;br&gt;
NPMダウンロード数、Bundlephobiaでのサイズ、ThoughWorks、Google　Trends、GitHubのStar/Pulseなどを並べて見れるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudflare-pages&quot;&gt;Cloudflare Pages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.cloudflare.com/&quot; title=&quot;Cloudflare Pages&quot;&gt;pages.cloudflare.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflareの静的サイトホスティングサービス。&lt;br&gt;
NetlifyやVercelのようにコミット/PRごとのレプビューURLの生成、Cloudflare Workersを使ったFaaSの仕組みを持っている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-pages/&quot; title=&quot;Introducing Cloudflare Pages: the best way to build JAMstack websites&quot;&gt;Introducing Cloudflare Pages: the best way to build JAMstack websites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cincheo-jsweet-a-java-to-javascript-transpiler&quot;&gt;cincheo/jsweet: A Java to JavaScript transpiler.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cincheo/jsweet&quot; title=&quot;cincheo/jsweet: A Java to JavaScript transpiler.&quot;&gt;github.com/cincheo/jsweet&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaのコードからTypeScript/JavaScriptのコードに変換するTranspiler&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;f-honst-fixes-your-dataset-according-to-your-rules&quot;&gt;f/honst: Fixes your dataset according to your rules.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/f/honst&quot; title=&quot;f/honst: Fixes your dataset according to your rules.&quot;&gt;github.com/f/honst&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;オブジェクトの配列に対してルールを元にデータを編集するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;agamnentzar-ag-psd-javascript-library-for-reading-and-writing-psd-files&quot;&gt;Agamnentzar/ag-psd: Javascript library for reading and writing PSD files&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Agamnentzar/ag-psd&quot; title=&quot;Agamnentzar/ag-psd: Javascript library for reading and writing PSD files&quot;&gt;github.com/Agamnentzar/ag-psd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PSDファイルの読み書きをするライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;asos-craigmorten-opine-fast-minimalist-web-framework-for-deno-ported-from-expressjs&quot;&gt;asos-craigmorten/opine: Fast, minimalist web framework for Deno ported from ExpressJS.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/asos-craigmorten/opine&quot; title=&quot;asos-craigmorten/opine: Fast, minimalist web framework for Deno ported from ExpressJS.&quot;&gt;github.com/asos-craigmorten/opine&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressをDeno向けのポートしたウェブサーバライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;micro-frontends-architecture-patterns&quot;&gt;Micro Frontends Architecture Patterns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/okmttdhr/books/8c977618755cb68ad2c0&quot; title=&quot;Micro Frontends Architecture Patterns&quot;&gt;zenn.dev/okmttdhr/books/8c977618755cb68ad2c0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MicroFrontend&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;architecture&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Micro Frontendsを始めとしたアーキテクチャパターンについての電子書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 14:12:45 +0900</pubDate>
        <link>https://jser.info/2020/12/22/lighthouse-7.0.0-react-server-components-micro-frontends-architecture-patterns/</link>
        <guid isPermaLink="true">https://jser.info/2020/12/22/lighthouse-7.0.0-react-server-components-micro-frontends-architecture-patterns/</guid>
        
        <category>Tools</category>
        
        <category>performance</category>
        
        <category>webservice</category>
        
        <category>Chrome</category>
        
        <category>Java</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-12-17のJS: Deno 1.6(deno compile)、Firefox 84/MDNの刷新、Chrome Developer Summit 2020</title>
        <description>&lt;p&gt;JSer.info #518 - Deno 1.6がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.land/posts/v1.6&quot;&gt;Deno 1.6 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだ最適化はされていませんが&lt;code&gt;deno compile&lt;/code&gt;で単独で動作するバイナリを出力できるようになっています。&lt;br&gt;
また、&lt;code&gt;deno lsp&lt;/code&gt;でDenoビルトインのLSPが利用できるように、TypeScript 4.1へアップデートなどが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 84がリリースされました。&lt;/p&gt;

&lt;p&gt;Accessiblity Inspectorに&amp;quot;Tabbing Order&amp;quot;の表示を追加、&lt;code&gt;PerformancePaintTiming&lt;/code&gt;のサポートが追加されています。&lt;br&gt;
AppCacheの削除、&lt;code&gt;http://localhost&lt;/code&gt;などのループバックアドレスから読まれたリソースをMixed Contentとして扱わないように変更なども含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/12/and-now-for-firefox-84/&quot;&gt;And now for … Firefox 84 - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Mozilla/Firefox/Releases/84&quot;&gt;Firefox 84 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あわせて、&lt;a href=&quot;https://developer.mozilla.org&quot;&gt;MDN Web Docs&lt;/a&gt;が新しいアーキテクチャ(Yari)で刷新されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&quot;&gt;Welcome Yari: MDN Web Docs has a new platform - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/devsummit/&quot;&gt;Chrome Dev Summit 2020&lt;/a&gt;の動画が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDzLmWaDwfHVZJl1Q5RFgOR&quot;&gt;Chrome Developer Summit 2020 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それぞれの動画に字幕(日本語は翻訳字幕)がつけられているので、興味がある人は見てみると良いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-4-0-current-node-js&quot;&gt;Node v15.4.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.4.0/&quot; title=&quot;Node v15.4.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.4.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.4.0リリース。&lt;br&gt;
&lt;code&gt;child_process.execFile&lt;/code&gt;/EventTarget/StreamがAbortSignalをサポート、&lt;code&gt;response.setHeader&lt;/code&gt;がメソッドチェーンできるように。&lt;br&gt;
Experimentalとして&lt;code&gt;worker_threads&lt;/code&gt;モジュールにBroadcastChannelを実装など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-6-release-notes&quot;&gt;Deno 1.6 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.6&quot; title=&quot;Deno 1.6 Release Notes&quot;&gt;deno.land/posts/v1.6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.6リリース。&lt;br&gt;
&lt;code&gt;deno compile&lt;/code&gt;でバイナリを出力できるように、&lt;code&gt;deno lsp&lt;/code&gt;でDenoビルトインのLSPが利用できるように、TypeScript 4.1へアップデート。&lt;br&gt;
また、Deno 1.5で初期値が&lt;code&gt;true&lt;/code&gt;となった&lt;code&gt;isolatedModules&lt;/code&gt;の設定を変更できないようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-nexus-1-0-a-major-release-for-type-safe-code-first-graphql-apis&quot;&gt;Announcing Nexus 1.0: A Major Release for Type-Safe, Code-First GraphQL APIs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.prisma.io/blog/announcing-the-release-of-nexus-schema-v1-b5eno5g08d0b&quot; title=&quot;Announcing Nexus 1.0: A Major Release for Type-Safe, Code-First GraphQL APIs&quot;&gt;www.prisma.io/blog/announcing-the-release-of-nexus-schema-v1-b5eno5g08d0b&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コードファーストなGraphQL APIサーバであるNexus 1.0リリース。&lt;br&gt;
nullableの扱いを変更、ドキュメントサイトの刷新、JSDoでのドキュメントサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/graphql-nexus/nexus&quot; title=&quot;graphql-nexus/nexus: Code-First, Type-Safe, GraphQL Schema Construction&quot;&gt;graphql-nexus/nexus: Code-First, Type-Safe, GraphQL Schema Construction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-but-technically-3-2-0-tannerlinsley-react-query&quot;&gt;Release v3! (But technically 3.2.0 😂) · tannerlinsley/react-query&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tannerlinsley/react-query/releases/tag/v3.2.0&quot; title=&quot;Release v3! (But technically 3.2.0 😂) · tannerlinsley/react-query&quot;&gt;github.com/tannerlinsley/react-query/releases/tag/v3.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Query 3リリース。&lt;br&gt;
&lt;code&gt;QueryCache&lt;/code&gt;と&lt;code&gt;QueryClient&lt;/code&gt;の分離、&lt;code&gt;useInfiniteQuery&lt;/code&gt;が両方向をサポート、&lt;code&gt;react-query-devtools&lt;/code&gt;は&lt;code&gt;react-query&lt;/code&gt;パッケージに同梱されるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://react-query.tanstack.com/guides/migrating-to-react-query-3&quot; title=&quot;Migrating to React Query 3 | React Query | TanStack&quot;&gt;Migrating to React Query 3 | React Query | TanStack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;and-now-for-firefox-84-mozilla-hacks-the-web-developer-blog&quot;&gt;And now for … Firefox 84 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/12/and-now-for-firefox-84/&quot; title=&quot;And now for … Firefox 84 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2020/12/and-now-for-firefox-84/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 84リリース。&lt;br&gt;
Accessiblity Inspectorに&amp;quot;Tabbing Order&amp;quot;の表示を追加、&lt;code&gt;PerformancePaintTiming&lt;/code&gt;のサポート。&lt;br&gt;
AppCacheの削除、&lt;code&gt;http://localhost&lt;/code&gt;などのループバックアドレスから読まれたリソースをMixed Contentとして扱わないように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Mozilla/Firefox/Releases/84&quot; title=&quot;Firefox 84 for developers - Mozilla | MDN&quot;&gt;Firefox 84 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4-0-0-facebook-flux&quot;&gt;Release 4.0.0 · facebook/flux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flux/releases/tag/4.0.0&quot; title=&quot;Release 4.0.0 · facebook/flux&quot;&gt;github.com/facebook/flux/releases/tag/4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;flux 4.0.0リリース。&lt;br&gt;
flux自体はメンテナンスモードとなっている。&lt;br&gt;
fbjsのアップデート、Babel 7との互換性に関する修正、React 17をPeerDependenciesに追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;welcome-yari-mdn-web-docs-has-a-new-platform-mozilla-hacks-the-web-developer-blog&quot;&gt;Welcome Yari: MDN Web Docs has a new platform - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&quot; title=&quot;Welcome Yari: MDN Web Docs has a new platform - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNの新しいバージョン(Yari)が公開された。&lt;br&gt;
GitHubとMarkdownを使ったコンテンツ管理となり、Jamstackアプローチなサイト構成になる。&lt;br&gt;
翻訳に関しては初期の方針を変更し、日本語/中国語/フランス語のTier 1言語に関しては手動での翻訳を受け付けられるようにする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org&quot; title=&quot;MDN Web Docs&quot;&gt;MDN Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/12/an-update-on-mdn-web-docs-localization-strategy/&quot; title=&quot;An update on MDN Web Docs’ localization strategy - Mozilla Hacks - the Web developer blog&quot;&gt;An update on MDN Web Docs’ localization strategy - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v1-10-0-new-compiler-options-api-resize-and-screenshot-support-for-child-windows-testcafe&quot;&gt;v1.10.0: New Compiler Options API, Resize and Screenshot Support for Child Windows | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devexpress.github.io/testcafe/blog/v1-10-0-new-compiler-options-api-resize-and-screenshot-support-for-child-windows.html&quot; title=&quot;v1.10.0: New Compiler Options API, Resize and Screenshot Support for Child Windows | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/v1-10-0-new-compiler-options-api-resize-and-screenshot-support-for-child-windows.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TestCafe v1.10.0リリース。&lt;br&gt;
Child Windowのスクリーンショットやリサイズのサポート、TypeScript CompilerオプションのAPIを追加、Shadow DOMへアクセスするメソッドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;roadmap-2021-2020-12-08-webpack&quot;&gt;Roadmap 2021 (2020-12-08) | webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.js.org/blog/2020-12-08-roadmap-2021/&quot; title=&quot;Roadmap 2021 (2020-12-08) | webpack&quot;&gt;webpack.js.org/blog/2020-12-08-roadmap-2021/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackの今後のロードマップについて。&lt;br&gt;
エッジケースへの対応、ESMの対応改善、モジュールとしてのCSSやHTML、エントリポイントとしてのHTML。&lt;br&gt;
Source Mapのパフォーマンス改善、Nodeの&lt;code&gt;exports&lt;/code&gt;などの対応、CommonJSのTree Shakingの改善、マルチスレッドの対応など。&lt;br&gt;
いろいろな項目を検討しているという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polyfill-mizdras-blog&quot;&gt;polyfill を深堀りする - mizdra&amp;#39;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mizdra.net/entry/2020/12/05/234806&quot; title=&quot;polyfill を深堀りする - mizdra&amp;#39;s blog&quot;&gt;www.mizdra.net/entry/2020/12/05/234806&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;polyfill、transpile、shimの違いについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;addyosmani-com-the-import-on-interaction-pattern&quot;&gt;AddyOsmani.com - The Import On Interaction Pattern&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://addyosmani.com/blog/import-on-interaction/&quot; title=&quot;AddyOsmani.com - The Import On Interaction Pattern&quot;&gt;addyosmani.com/blog/import-on-interaction/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ユーザーがUIを必要となったタイミングで、リソースを遅延ロードするという話。&lt;br&gt;
クリックしたタイミングでウィジェットをロードして表示するなど。いろいろなサイトの事例ごとに遅延ロードで取得するリソースのサイズ、インタラクションに関するパフォーマンスの違いについてまとめられている。&lt;br&gt;
また、ReactやVueでの実装、静的なものへの置き換えについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-event-loop-utilization-in-node-js-nodesource&quot;&gt;Introduction to Event Loop Utilization in Node.js - NodeSource&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodesource.com/blog/event-loop-utilization-nodejs&quot; title=&quot;Introduction to Event Loop Utilization in Node.js - NodeSource&quot;&gt;nodesource.com/blog/event-loop-utilization-nodejs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;perf_hooks&lt;/code&gt;の&lt;code&gt;eventLoopUtilization()&lt;/code&gt;を使ったEvent Loop Utilization (ELU)の収集について。&lt;br&gt;
スケーリングのメトリクスにイベントループの使用率(ELU)を使う話、CPU使用率との比較、モジュールの使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;publish-ship-and-install-modern-javascript-for-faster-applications&quot;&gt;Publish, ship, and install modern JavaScript for faster applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/publish-modern-javascript/&quot; title=&quot;Publish, ship, and install modern JavaScript for faster applications&quot;&gt;web.dev/publish-modern-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;modern browserとlegacy browser向けにJavaScriptのbundleを分けて配布する際に、ビルドやwebpackでのbundleを最適化するプラグインについての紹介記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-developer-summit-2020-youtube&quot;&gt;Chrome Developer Summit 2020 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDzLmWaDwfHVZJl1Q5RFgOR&quot; title=&quot;Chrome Developer Summit 2020 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLNYkxOF6rcIDzLmWaDwfHVZJl1Q5RFgOR&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome Developer Summit 2020の動画一覧。&lt;br&gt;
それぞれの動画に字幕/翻訳がついている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/devsummit/&quot; title=&quot;Chrome Dev Summit 2020&quot;&gt;Chrome Dev Summit 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-developers&quot;&gt;Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/&quot; title=&quot;Chrome Developers&quot;&gt;developer.chrome.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google Chromeの新機能、DevToolsのドキュメント、拡張のドキュメントなどを扱うChromeのポータルサイト&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/blog/welcome/&quot; title=&quot;Welcome to the new developer.chrome.com! - Chrome Developers&quot;&gt;Welcome to the new developer.chrome.com! - Chrome Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;automating-audits-with-autowebperf&quot;&gt;Automating audits with AutoWebPerf&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/autowebperf/&quot; title=&quot;Automating audits with AutoWebPerf&quot;&gt;web.dev/autowebperf/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebPageTestやPageSpeed Insightsなどを使い、特定のサイトのパフォーマンスを計測したデータをGoogle Sheetsに出力し、パフォーマンスダッシュボードを作成するツール。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf/commit/a39097aea673515b0316dcd6a931deb892e017f5&quot; title=&quot;Added URL connector that runs a single test with a specific URL.&quot;&gt;Added URL connector that runs a single test with a specific URL.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gildas-lormeau-singlefile-web-extension-for-firefox-chrome-ms-edge-and-cli-tool-to-save-a-faithful-copy-of-an-entire-web-page-in-a-single-html-file&quot;&gt;gildas-lormeau/SingleFile: Web Extension for Firefox/Chrome/MS Edge and CLI tool to save a faithful copy of an entire web page in a single HTML file&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gildas-lormeau/SingleFile&quot; title=&quot;gildas-lormeau/SingleFile: Web Extension for Firefox/Chrome/MS Edge and CLI tool to save a faithful copy of an entire web page in a single HTML file&quot;&gt;github.com/gildas-lormeau/SingleFile&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブサイトをシングルファイルのHTMLとして保存できるブラウザ拡張とCLI&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rafgraph-rollpkg-convention-over-configuration-way-to-create-packages-with-rollup-and-typescript&quot;&gt;rafgraph/rollpkg: Convention over configuration way to create packages with Rollup and TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rafgraph/rollpkg&quot; title=&quot;rafgraph/rollpkg: Convention over configuration way to create packages with Rollup and TypeScript&quot;&gt;github.com/rafgraph/rollpkg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptとRollupを使ったパッケージ開発のためツールキット。&lt;br&gt;
CJS、ESMなどの各種モジュールのビルド、tsconfigやprettierなどのプリセット、ビルド時に開発向けのコードを取り除く仕組みなどをもつ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 17 Dec 2020 12:00:18 +0900</pubDate>
        <link>https://jser.info/2020/12/17/deno-1.6deno-compile-firefox-84mdn-chrome-developer-summit-2020/</link>
        <guid isPermaLink="true">https://jser.info/2020/12/17/deno-1.6deno-compile-firefox-84mdn-chrome-developer-summit-2020/</guid>
        
        <category>Chrome</category>
        
        <category>performance</category>
        
        <category>node.js</category>
        
        <category>document</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-12-08のJS: Snowpack 3.0 RC、WMR、State of CSS 2020</title>
        <description>&lt;p&gt;JSer.info #517 - Snowpack 3.0 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/posts/2020-12-03-snowpack-3-release-candidate&quot;&gt;Snowpack v3.0 Release Candidate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いくつかの機能がexperimentalでopt-inとして実装されています。&lt;br&gt;
npmパッケージの&lt;code&gt;import&lt;/code&gt;を&lt;a href=&quot;https://www.skypack.dev/&quot;&gt;Skypack&lt;/a&gt;のCDN経由でダウンロードするStreaming NPM Importsのサポート、esbuildを使った最適化のサポートが追加されています。&lt;br&gt;
また、開発サーバでのルーティングサポート、snowpackをコードから扱うJavaScript APIの変更なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/preactjs/wmr&quot;&gt;preactjs/wmr&lt;/a&gt;は&lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;のような開発ツールキットの一種です。&lt;/p&gt;

&lt;p&gt;開発サーバと&lt;a href=&quot;https://rollupjs.org/guide/en/&quot;&gt;rollup.js&lt;/a&gt;ベースのビルドが一体となっているツールです。&lt;br&gt;
特徴的なのは&lt;a href=&quot;https://packagephobia.com/result?p=wmr&quot;&gt;インストールサイズ&lt;/a&gt;なども最適化されたツールとなっています。&lt;br&gt;
また、npmパッケージも開発サーバの&lt;a href=&quot;https://github.com/preactjs/wmr/blob/4478690ebf806cfacd07380da8ba4fd5f4ce5963/src/lib/npm-middleware.js&quot;&gt;npm-middleware&lt;/a&gt;を通してnpm または &lt;a href=&quot;https://unpkg.com/&quot;&gt;UNPKG&lt;/a&gt;から取得できるため、npm installせずにモジュールを&lt;code&gt;import &amp;quot;packages&amp;quot;&lt;/code&gt;できるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;CSSに関する開発者アンケートであるThe State of CSS 2020の結果が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2020.stateofcss.com/en-US/&quot;&gt;The State of CSS 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSSの機能ごとの認知、Preprocessorの選択、CSSフレームワークの利用状況、方法論、CSS-in-JS、ツール、リソースなどの項目についてアンケート結果が公開されています。&lt;br&gt;
前年度との比較も公開されているので興味がある人は見てみるといいかもれしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-5-0-googlechrome-lighthouse&quot;&gt;Release v6.5.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v6.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse v6.5.0リリース。&lt;br&gt;
LCPとなる要素がPreloadされているかを判定する&lt;code&gt;preload-lcp-image&lt;/code&gt;のAuditを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snowpack-v3-0-release-candidate&quot;&gt;Snowpack v3.0 Release Candidate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.snowpack.dev/posts/2020-12-03-snowpack-3-release-candidate&quot; title=&quot;Snowpack v3.0 Release Candidate&quot;&gt;www.snowpack.dev/posts/2020-12-03-snowpack-3-release-candidate&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;snowpack 3.0 RCリリース。&lt;br&gt;
npmパッケージの&lt;code&gt;import&lt;/code&gt;をSkypackのCDN経由でダウンロードするStreaming NPM Importsのサポート、esbuildを使った最適化のサポート。&lt;br&gt;
Devサーバのルーティングサポート、snowpackのJavaScript　APIの変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-release-v7-1-0&quot;&gt;The npm Blog — Release v7.1.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.npmjs.org/post/636604708661886976/release-v710&quot; title=&quot;The npm Blog — Release v7.1.0&quot;&gt;blog.npmjs.org/post/636604708661886976/release-v710&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.1.0リリース。&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;scripts&lt;/code&gt;を書き換える&lt;code&gt;npm set-script&lt;/code&gt;コマンドの追加、引数なしの&lt;code&gt;npm exec&lt;/code&gt;にインタラクティブモードの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-88-digital-goods-lighting-estimation-in-augmented-reality-and-more&quot;&gt;Chromium Blog: Chrome 88: Digital Goods, Lighting Estimation in Augmented Reality, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2020/12/chrome-88-digital-goods-lighting.html&quot; title=&quot;Chromium Blog: Chrome 88: Digital Goods, Lighting Estimation in Augmented Reality, and More&quot;&gt;blog.chromium.org/2020/12/chrome-88-digital-goods-lighting.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 88 betaリリース。&lt;br&gt;
&lt;code&gt;target=_blank&lt;/code&gt;のリンクを暗黙的に&lt;code&gt;rel=noopener&lt;/code&gt;として扱うように、&lt;code&gt;addEventListener&lt;/code&gt;に&lt;code&gt;signal&lt;/code&gt;オプションの追加、CSS &lt;code&gt;aspect-ratio&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;Permissions-Policy&lt;/code&gt; Headerのサポート、FTPサポートの削除、Web Components v0の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-1-0-aframevr-aframe&quot;&gt;Release v1.1.0 · aframevr/aframe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aframevr/aframe/releases/tag/v1.1.0&quot; title=&quot;Release v1.1.0 · aframevr/aframe&quot;&gt;github.com/aframevr/aframe/releases/tag/v1.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebXR&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebXRフレームワークのAFrame v1.1.0リリース。&lt;br&gt;
WebXR compositor layers、WebXR DOM Overlays、WebXR immersive navigation、WebXR hand trackingのサポート。&lt;br&gt;
Oculus Quest 2のコントローラーのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-deep-dive-into-css-grid-minmax&quot;&gt;A Deep Dive Into CSS Grid minmax()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/css-grid-minmax/&quot; title=&quot;A Deep Dive Into CSS Grid minmax()&quot;&gt;ishadeed.com/article/css-grid-minmax/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Gridの&lt;code&gt;minmax()&lt;/code&gt;、&lt;code&gt;autofit&lt;/code&gt;、&lt;code&gt;autofill&lt;/code&gt;について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-testing-library-tdd&quot;&gt;フロントエンド（React Testing Library）で TDD（テスト駆動開発）をする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/higa/articles/34439dc279c55dd2ab95&quot; title=&quot;フロントエンド（React Testing Library）で TDD（テスト駆動開発）をする&quot;&gt;zenn.dev/higa/articles/34439dc279c55dd2ab95&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでTDDをしながら実装を書いていくチュートリアル記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-performance-calendar-human-performance-metrics&quot;&gt;Web Performance Calendar » Human performance metrics&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2020/human-performance-metrics/&quot; title=&quot;Web Performance Calendar » Human performance metrics&quot;&gt;calendar.perfplanet.com/2020/human-performance-metrics/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RUMでのパフォーマンスモニタリングとパフォーマンスに関するユーザーアンケートの結果に相関があったというWikipediaでの話。&lt;br&gt;
ページの読み込み時間の中央値が120ミリ秒増加すると、ユーザー満足度が2％低下するなどわずかな変化でも満足度に影響が出たという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-from-mini-apps-w3c-tpac-breakout-session&quot;&gt;Learning from Mini Apps—W3C TPAC Breakout Session&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tomayac.com/2020/11/05/learning-from-mini-apps-w3c-tpac-breakout-session/&quot; title=&quot;Learning from Mini Apps—W3C TPAC Breakout Session&quot;&gt;blog.tomayac.com/2020/11/05/learning-from-mini-apps-w3c-tpac-breakout-session/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;中国のMini Appsについてのスライド。&lt;br&gt;
Mini Appsの仕組みや実装方法、Dev Toolsでのデバッグ方法、パーミッションやセキュリティモデルについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-css-2020&quot;&gt;The State of CSS 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2020.stateofcss.com/en-US/&quot; title=&quot;The State of CSS 2020&quot;&gt;2020.stateofcss.com/en-US/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The State of CSS 2020のアンケート結果が公開された。&lt;br&gt;
CSSの機能ごとの認知、Preprocessorの選択、CSSフレームワークの利用状況、方法論、CSS-in-JS、ツール、リソースなどの項目についてアンケート結果が公開されている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yeonjuan-html-eslint-eslint-plugin-for-linting-html&quot;&gt;yeonjuan/html-eslint: ESLint plugin for linting HTML&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yeonjuan/html-eslint&quot; title=&quot;yeonjuan/html-eslint: ESLint plugin for linting HTML&quot;&gt;github.com/yeonjuan/html-eslint&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint上でHTMLのLintをするプラグインとルール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;preactjs-wmr-the-tiny-all-in-one-development-tool-for-modern-web-apps&quot;&gt;preactjs/wmr: 👩‍🚀 The tiny all-in-one development tool for modern web apps.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/preactjs/wmr&quot; title=&quot;preactjs/wmr: 👩‍🚀 The tiny all-in-one development tool for modern web apps.&quot;&gt;github.com/preactjs/wmr&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RollupベースのJSやCSSのビルド、開発サーバ、Prerenderなどの機能を持ったウェブフロント開発ツールキット&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naugtur-debugging-aid-experimental-tools-for-debugging-node-js-apps-without-pausing&quot;&gt;naugtur/debugging-aid: Experimental tools for debugging Node.js apps without pausing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naugtur/debugging-aid&quot; title=&quot;naugtur/debugging-aid: Experimental tools for debugging Node.js apps without pausing&quot;&gt;github.com/naugtur/debugging-aid&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;perf_hooks&lt;/code&gt;などを使ったrequireするだけでinstrumentsを仕込めるモジュール集&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;beaker-browser-1-0&quot;&gt;Beaker Browser 1.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://beakerbrowser.com/2020/12/02/beaker-1-0.html&quot; title=&quot;Beaker Browser 1.0&quot;&gt;beakerbrowser.com/2020/12/02/beaker-1-0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Hypercore&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Hypercore Protocol(aka. dat)を扱うブラウザであるBeaker Browser 1.0リリース。&lt;br&gt;
Hypercore Protocolを使ったP2Pでサイトを作成でき、サイトのフォーク、共有できる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Dec 2020 10:55:04 +0900</pubDate>
        <link>https://jser.info/2020/12/08/snowpack-3.0-rc-wmr-state-of-css-2020/</link>
        <guid isPermaLink="true">https://jser.info/2020/12/08/snowpack-3.0-rc-wmr-state-of-css-2020/</guid>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        <category>CSS</category>
        
        <category>ESLint</category>
        
        <category>HTML</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
